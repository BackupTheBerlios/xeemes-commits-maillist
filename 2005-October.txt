From dfrese at berlios.de  Sat Oct  1 17:58:16 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Sat, 1 Oct 2005 17:58:16 +0200
Subject: [Xeemes-commits] r3 - in trunk: . src
Message-ID: <200510011558.j91FwGo9016341@sheep.berlios.de>

Author: dfrese
Date: 2005-10-01 17:58:16 +0200 (Sat, 01 Oct 2005)
New Revision: 3

Modified:
   trunk/src/resources.inc
   trunk/view.php
Log:
Subject: Sending usual files instead of relocating the user



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-09-25 21:32:02 UTC (rev 2)
+++ trunk/src/resources.inc	2005-10-01 15:58:16 UTC (rev 3)
@@ -118,10 +118,19 @@
     return file_get_contents($this->filename);
   }
 
-  function original() {
+  function isOriginal() {
     return true;
   }
 
+  function outputContent() {
+    if (isOriginal())
+      // TODO: this is supposed to be slow; and not very suitable for
+      // very large files, resp. low bandwidths
+      readfile($this->filename);
+    else
+      print($this->stringContent());
+  }
+
   function get_location() {
     return $this->location;
   }

Modified: trunk/view.php
===================================================================
--- trunk/view.php	2005-09-25 21:32:02 UTC (rev 2)
+++ trunk/view.php	2005-10-01 15:58:16 UTC (rev 3)
@@ -39,11 +39,9 @@
   } else {
     if (!$resource->exists())
       header('HTTP/1.1 404 Not found');
-    else if ($resource->original())
-      header('Location: '.$resource->url());
     else {
       // header Content-type ??
-      print($resource->stringContent());
+      $resource->outputContent();
     }
   }
 }



From dfrese at berlios.de  Mon Oct  3 22:09:52 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Mon, 3 Oct 2005 22:09:52 +0200
Subject: [Xeemes-commits] r4 - trunk/src
Message-ID: <200510032009.j93K9qSh023863@sheep.berlios.de>

Author: dfrese
Date: 2005-10-03 22:09:52 +0200 (Mon, 03 Oct 2005)
New Revision: 4

Modified:
   trunk/src/wikipedia.inc
Log:
Subject: Fixed line recognition/separation



Modified: trunk/src/wikipedia.inc
===================================================================
--- trunk/src/wikipedia.inc	2005-10-01 15:58:16 UTC (rev 3)
+++ trunk/src/wikipedia.inc	2005-10-03 20:09:52 UTC (rev 4)
@@ -58,9 +58,8 @@
   }
 
   function parse($text) {
-    $lines = preg_replace('/[\r]?\n/', '</xeemes:line><xeemes:line>', $text);
-    $xml_text = '<html xmlns:xeemes="'.XEEMES_NS_URI.'"><body><xeemes:line>'.
-      $lines.'</xeemes:line></body></html>';
+    $xml_text = '<html xmlns:xeemes="'.XEEMES_NS_URI.'"><body>'.
+      $text.'</body></html>';
     $this->document = DOMDocument::loadXML($xml_text);
 
     $this->process_lines();
@@ -82,6 +81,47 @@
   }
 
   function process_lines() {
+    // split text nodes at line breaks
+    $first = $this->document->documentElement->firstChild->firstChild;
+    $line = array();
+    while ($first) {
+      if (($first->nodeType == XML_TEXT_NODE) &&
+	  (preg_match('/[\r]?\n/', $first->textContent))) {
+	$pos = strpos($first->textContent, "\n");
+	$dim = 1;
+	$pos2 = strpos($first->textContent, "\r\n");
+	if (($pos2 !== false) && ($pos2 < $pos)) {
+	  $pos = $pos2;
+	  $dim = 2;
+	}
+	$s1 = $this->document->createTextNode(substr($first->textContent,
+						     0, $pos));
+	$s2 = $this->document->createTextNode(substr($first->textContent,
+						     $pos+$dim));
+	$line []= $s1;
+	$xl = $this->document->createElementNS(XEEMES_NS_URI,
+					       'xeemes:line');
+	foreach ($line as $item)
+	  $xl->appendChild($item);
+	$line = array();
+	$first->parentNode->insertBefore($xl, $first);
+	$first->parentNode->replaceChild($s2, $first);
+	$first = $s2;
+      } else {
+	$line []= $first; //$first->cloneNode(true);
+	$next = $first->nextSibling;
+	$first->parentNode->removeChild($first);
+	$first = $next;
+      }
+    }
+    if (count($line) > 0) {
+      $xl = $this->document->createElementNS(XEEMES_NS_URI,
+					     'xeemes:line');
+      foreach ($line as $item)
+	$xl->appendChild($item);
+      $this->document->documentElement->firstChild->appendChild($xl);
+    }
+
     // TODO: enumerate lines for error messages?
     $next_line = $this->document->documentElement->firstChild->firstChild;
     while ($next_line) {



From dfrese at berlios.de  Mon Oct  3 22:10:50 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Mon, 3 Oct 2005 22:10:50 +0200
Subject: [Xeemes-commits] r5 - trunk/src
Message-ID: <200510032010.j93KAobG023965@sheep.berlios.de>

Author: dfrese
Date: 2005-10-03 22:10:50 +0200 (Mon, 03 Oct 2005)
New Revision: 5

Modified:
   trunk/src/resources.inc
Log:
Subject: Tranform wikipedia texts to utf8



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-03 20:09:52 UTC (rev 4)
+++ trunk/src/resources.inc	2005-10-03 20:10:50 UTC (rev 5)
@@ -198,7 +198,9 @@
 
   function domContent() {
     $parser = new WikipediaParser();
-    return $parser->parse($this->stringContent());
+    // TODO: look at charset meta-data
+    return $parser->parse(iconv('iso-8859-1', 'utf-8',
+				$this->stringContent()));
   }
 }
 



From dfrese at berlios.de  Tue Oct  4 17:26:38 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Tue, 4 Oct 2005 17:26:38 +0200
Subject: [Xeemes-commits] r6 - trunk/src
Message-ID: <200510041526.j94FQcwg016599@sheep.berlios.de>

Author: dfrese
Date: 2005-10-04 17:26:38 +0200 (Tue, 04 Oct 2005)
New Revision: 6

Modified:
   trunk/src/resources.inc
Log:
Subject: Implemented xeemes:xsl-transformation



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-03 20:10:50 UTC (rev 5)
+++ trunk/src/resources.inc	2005-10-04 15:26:38 UTC (rev 6)
@@ -151,7 +151,7 @@
   }
 
   function extensions() {
-    return array('xml');
+    return array('xml', 'xsl');
   }
 
   function domContent() {
@@ -171,7 +171,7 @@
 
   function convert_special_tags($doc) {
     include_resources($doc, $doc->documentElement, array($this->location));
-    replace_special_tags($doc, $doc->documentElement);
+    replace_special_tags($this, $doc, $doc->documentElement);
   }
 }
 
@@ -299,7 +299,52 @@
   $oldnode->parentNode->removeChild($oldnode);
 }
 
-function replace_special_tags($doc, $node) {
+function replace_special_tags($resource, $doc, $node) {
+  if ($node->nodeType == XML_ELEMENT_NODE) {
+    if ($node->prefix == 'xeemes') {
+      if ($node->localName == 'xsl-transformation') {
+	$new = replace_xsl_transformation($resource, $doc, $node);
+	replace_node($node, $new);
+      } else {
+	$node->parentNode->replaceChild($doc->createTextNode('Unknown special tag: '.$node->localName), $node);
+      }
+    } else {
+      foreach (nodelist2array($node->childNodes) as $child) {
+	replace_special_tags($resource, $doc, $child);
+      }
+    }
+  }
 }
 
+function replace_xsl_transformation($resource, $doc, $node) {
+  // TODO: Error checking
+  // load stylesheet
+  $stylesheet_res = get_resource($node->getAttribute('stylesheet'), array(),
+				 $resource->get_location());
+  $stylesheet = new XSLTProcessor();
+  $stylesheet->importStyleSheet($stylesheet_res->domContent());
+
+  // find first element node child
+  $docelement = null;
+  foreach (nodelist2array($node->childNodes) as $child) {
+    if ($child->nodeType == XML_ELEMENT_NODE) {
+      $docelement = $child;
+      break;
+    }
+  }
+  $doc2 = new DomDocument();
+  $doc2->appendChild($doc2->importNode($docelement, true));
+
+  $result_doc = $stylesheet->transformToDoc($doc2);
+  
+  $result_nodes = array();
+  foreach (nodelist2array($result_doc->childNodes) as $node) {
+    $result_nodes []= $doc->importNode($node, true);
+  }
+  return $result_nodes;
+  
+  //return $doc->importNode($result_doc->documentElement, true);
+  // TODO: recursive replace special tags?
+}
+
 ?>



From dfrese at berlios.de  Sat Oct  8 22:31:49 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Sat, 8 Oct 2005 22:31:49 +0200
Subject: [Xeemes-commits] r7 - trunk/src
Message-ID: <200510082031.j98KVnlQ006368@sheep.berlios.de>

Author: dfrese
Date: 2005-10-08 22:31:49 +0200 (Sat, 08 Oct 2005)
New Revision: 7

Modified:
   trunk/src/meta.inc
Log:
Subject: Ported to PHP 5



Modified: trunk/src/meta.inc
===================================================================
--- trunk/src/meta.inc	2005-10-04 15:26:38 UTC (rev 6)
+++ trunk/src/meta.inc	2005-10-08 20:31:49 UTC (rev 7)
@@ -24,46 +24,47 @@
  */
 
 function load_meta_data($filename) {
-  $doc = domxml_open_file($filename);
-  $root = $doc->document_element();
+  $doc = DOMDocument::load($filename);
+  $root = $doc->documentElement;
   $result = get_meta_data_entry($root);
   return $result;
 }
 
 function get_meta_data_entry($node) {
   $entry = false;
-  foreach ($node->child_nodes() as $child) {
-    if ($child->node_type() == XML_ELEMENT_NODE) {
+  for ($i = 0; $i < $node->childNodes->length; $i++) {
+    $child = $node->childNodes->item($i);
+    if ($child->nodeType == XML_ELEMENT_NODE) {
       if (!is_array($entry)) $entry = array();
-      $entry[$child->node_name()] = get_meta_data_entry($child);
+      $entry[$child->nodeName] = get_meta_data_entry($child);
     }
   }
   if (!$entry)
-    $entry = $node->get_content();
+    $entry = $node->textContent;
   return $entry;
 }
 
 function save_meta_data($filename, $data) {
-  $doc = domxml_new_doc('1.0');
-  $doc->append_child(make_meta_data($doc, 'meta-data', $data));
-  $doc->dump_file($filename, false, true);
+  $doc = new DOMDocument();
+  $doc->appendChild(make_meta_data($doc, 'meta-data', $data));
+  $doc->save($filename);
 }
 
 function make_meta_data($doc, $name, $entry, $id = false) {
-  $node = $doc->create_element($name);
+  $node = $doc->createElement($name);
   if (is_array($entry)) {
     foreach ($entry as $subname => $subentry) {
       $this_id = $id;
       if ($id) $down_id = $id.'00'; else $down_id = false;
       $d = make_meta_data($doc, $subname, $subentry, $down_id);
       if ($id) {
-	$d->append_child($doc->create_attribute('id', $id));
+	$d->setAttribute('id', $id);
 	$id = $id+1;
       }
-      $node->append_child($d);
+      $node->appendChild($d);
     }
   } else {
-    $node->append_child($doc->create_text_node($entry));
+    $node->appendChild($doc->createTextNode($entry));
   }
   return $node;
 }



From dfrese at berlios.de  Sat Oct  8 22:34:19 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Sat, 8 Oct 2005 22:34:19 +0200
Subject: [Xeemes-commits] r8 - trunk/src
Message-ID: <200510082034.j98KYJUj006491@sheep.berlios.de>

Author: dfrese
Date: 2005-10-08 22:34:19 +0200 (Sat, 08 Oct 2005)
New Revision: 8

Modified:
   trunk/src/transformation.inc
Log:
Subject: Added LAYOUT-URL parameter for layout transformations

LAYOUT-URL is an URL to the layout-specific subdirectory; e.g. for 
images.


Modified: trunk/src/transformation.inc
===================================================================
--- trunk/src/transformation.inc	2005-10-08 20:31:49 UTC (rev 7)
+++ trunk/src/transformation.inc	2005-10-08 20:34:19 UTC (rev 8)
@@ -48,10 +48,11 @@
 class Layout extends Transformation {
   function Layout ($class, $name) {
     $logic_filename = XEEMES_BASE_DIR.'/layouts/'.$class.'.xsl';
-    $layout_dir = '/layouts/'.$class.'/'.$name;
-    $layout_filename = XEEMES_BASE_DIR.$layout_dir.'.xml';
+    $layout_dir = 'layouts/'.$class.'/'.$name;
+    $layout_filename = XEEMES_BASE_DIR.'/'.$layout_dir.'.xml';
     $this->document = DOMDocument::load($logic_filename);
     $this->parameters['layout-filename'] = $layout_filename;
+    $this->parameters['layout-url'] = XEEMES_BASE_URL.$layout_dir.'/';
   }
 }
 



From dfrese at berlios.de  Mon Oct 17 21:25:21 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Mon, 17 Oct 2005 21:25:21 +0200
Subject: [Xeemes-commits] r9 - trunk/src
Message-ID: <200510171925.j9HJPLal023549@sheep.berlios.de>

Author: dfrese
Date: 2005-10-17 21:25:21 +0200 (Mon, 17 Oct 2005)
New Revision: 9

Modified:
   trunk/src/resources.inc
Log:
Subject: Split layout meta-data in layout-name and layout-class



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-08 20:34:19 UTC (rev 8)
+++ trunk/src/resources.inc	2005-10-17 19:25:21 UTC (rev 9)
@@ -25,6 +25,7 @@
 
 require_once('transformation.inc');
 require_once('wikipedia.inc');
+require_once('meta.inc');
 
 define('XEEMES_RESOURCE_UNKNOWN',    1);
 define('XEEMES_RESOURCE_XML',        2);
@@ -160,8 +161,10 @@
 
   function xmlContent() {
     $doc = $this->domContent();
-    if ($this->get_meta('layout')) {
-      $layout = new Layout($this->get_meta('layout')); // class:name?
+    if ($this->get_meta('layout-name')) {
+      $class = $this->get_meta('layout-class');
+      if (!$class) $class = 'simple';
+      $layout = new Layout($class, $this->get_meta('layout-name'));
       $doc = $layout->process($doc, array()); // TODO parameters
     }
     $this->convert_special_tags($doc); // TODO prevent mutual incs



From dfrese at berlios.de  Mon Oct 17 21:29:09 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Mon, 17 Oct 2005 21:29:09 +0200
Subject: [Xeemes-commits] r10 - trunk/src
Message-ID: <200510171929.j9HJT9fG023938@sheep.berlios.de>

Author: dfrese
Date: 2005-10-17 21:29:09 +0200 (Mon, 17 Oct 2005)
New Revision: 10

Modified:
   trunk/src/resources.inc
Log:
Subject: Fixed typo in outputContent



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-17 19:25:21 UTC (rev 9)
+++ trunk/src/resources.inc	2005-10-17 19:29:09 UTC (rev 10)
@@ -124,7 +124,7 @@
   }
 
   function outputContent() {
-    if (isOriginal())
+    if ($this->isOriginal())
       // TODO: this is supposed to be slow; and not very suitable for
       // very large files, resp. low bandwidths
       readfile($this->filename);



From dfrese at berlios.de  Mon Oct 17 21:34:36 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Mon, 17 Oct 2005 21:34:36 +0200
Subject: [Xeemes-commits] r11 - trunk/src
Message-ID: <200510171934.j9HJYajZ024350@sheep.berlios.de>

Author: dfrese
Date: 2005-10-17 21:34:35 +0200 (Mon, 17 Oct 2005)
New Revision: 11

Modified:
   trunk/src/resources.inc
Log:
Subject: Changed special tag replacing and implemented xsl-transformation



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-17 19:29:09 UTC (rev 10)
+++ trunk/src/resources.inc	2005-10-17 19:34:35 UTC (rev 11)
@@ -167,14 +167,13 @@
       $layout = new Layout($class, $this->get_meta('layout-name'));
       $doc = $layout->process($doc, array()); // TODO parameters
     }
-    $this->convert_special_tags($doc); // TODO prevent mutual incs
+    $this->convert_special_tags($doc);
     // TODO transformations
     return $doc->saveXML();
   }
 
   function convert_special_tags($doc) {
-    include_resources($doc, $doc->documentElement, array($this->location));
-    replace_special_tags($this, $doc, $doc->documentElement);
+    replace_special_tags($this, $doc->documentElement);
   }
 }
 
@@ -230,67 +229,67 @@
   }
 }
 
-function include_resources($doc, $node, $already_included_locations) {
-  if ($node->nodeType == XML_ELEMENT_NODE) {
-    if ($node->nodeName == 'xeemes:resource') {
-      $location = $node->attributes->getNamedItem('location')->nodeValue;
-      $name = $location;
-      // TODO: args: location, thumbnail, size, frame
-      $args = array();
+function include_resource($main_resource, $node,
+			  $already_included_locations) {
+  $doc = $node->ownerDocument;
+  $result = array();
 
-      $display_n = $node->attributes->getNamedItem('display');
-      $inline = $display_n && $display_n->nodeValue;
-      $resource = get_resource($location, $args,
-			       $already_included_locations[0]);
-      if (in_array($location, $already_included_locations)) {
-	replace_node($node,
-		     $doc->createTextNode('[Error: recursive '.
-					  'inclusion of '.$location.']'));
-	return;
+  $location = $node->attributes->getNamedItem('location')->nodeValue;
+  $name = $location;
+  // TODO: args: location, thumbnail, size, frame
+  $args = array();
+  
+  $display_n = $node->attributes->getNamedItem('display');
+  $inline = $display_n && $display_n->nodeValue;
+  $resource = get_resource($location, $args,
+			   $already_included_locations[0]);
+  if (in_array($location, $already_included_locations)) {
+    return $doc->createTextNode('[Error: recursive inclusion of '.
+				$location.']');
+  } else {
+    $location = $resource->get_location();
+    array_unshift($already_included_locations, $location);
+  }
+  $type = $resource->type();
+  if ($inline) {
+    if (($type & XEEMES_RESOURCE_XML) > 0) {
+      if ($resource->exists()) {
+	$incl_doc = $resource->domContent();
+	replace_special_tags($main_resource, $incl_doc->documentElement,
+			     $already_included_locations);
+	$bodies = $incl_doc->getElementsByTagName('body');
+	$body = $bodies->item(0);
+	// TODO: heads?
+	$result = array();
+	foreach (nodelist2array($body->childNodes) as $child)
+	  $result []= $doc->importNode($child, true);
       } else {
-	$location = $resource->get_location();
-	array_unshift($already_included_locations, $location);
+	$err = $doc->createTextNode('['.$location.' not found]');
+	$result = $err;
       }
-      $type = $resource->type();
-      if ($inline) {
-	if (($type & XEEMES_RESOURCE_XML) > 0) {
-	  if ($resource->exists()) {
-	    $incl_doc = $resource->domContent();
-	    $incl_node = $doc->importNode($incl_doc->documentElement, true);
-	    $bodies = $incl_node->getElementsByTagName('body');
-	    replace_node($node, nodelist2array($bodies->item(0)->childNodes));
-	  } else {
-	    replace_node($node, $doc->createTextNode('['.$location.
-						     ' Not found]'));
-	  }
-	} else if (($type & XEEMES_RESOURCE_IMAGE) > 0) {
-	  $img = $doc->createElement('img');
-	  // TODO args
-	  $img->setAttribute('src', XEEMES_BASE_URL.'view.php'.$location);
-	  replace_node($node, $img);
-	} else if (($type & XEEMES_RESOURCE_DATA) > 0) {
-	  $obj = $doc->createElement('object');
-	  $obj->setAttribute('data', XEEMES_BASE_URL.'data/'.$location);
-	  // TODO type, args
-	}
-      } else {
-	$a = $doc->createElement('a');
-	if ($node->hasChildNodes()) {
-	  foreach (nodelist2array($node->childNodes) as $child)
-	    $a->appendChild($a, $doc->importNode($child, true));
-	} else
-	  $a->appendChild($doc->createTextNode($name));
-	$a->setAttribute('href', $resource->view_url()); // TODO args
-	replace_node($node, $a);
-      }
+    } else if (($type & XEEMES_RESOURCE_IMAGE) > 0) {
+      $img = $doc->createElement('img');
+      // TODO args
+      $img->setAttribute('src', XEEMES_BASE_URL.'view.php'.$location);
+      $result = $img;
+    } else if (($type & XEEMES_RESOURCE_DATA) > 0) {
+      $obj = $doc->createElement('object');
+      $obj->setAttribute('data', XEEMES_BASE_URL.'data/'.$location);
+      // TODO type, args
+      $result = $obj;
     }
-    $child = $node->firstChild;
-    while ($child) {
-      $next = $child->nextSibling;
-      include_resources($doc, $child, $already_included_locations);
-      $child = $next;
-    }
+  } else {
+    $link = $doc->createElement('a');
+    if ($node->hasChildNodes()) {
+      foreach (nodelist2array($node->childNodes) as $child)
+	$link->appendChild($link, $doc->importNode($child, true));
+    } else
+      $link->appendChild($doc->createTextNode($name));
+    $link->setAttribute('href', $resource->view_url()); // TODO args
+    $result = $link;
   }
+
+  return $result;
 }
 
 function replace_node($oldnode, $newnodes) {
@@ -302,26 +301,42 @@
   $oldnode->parentNode->removeChild($oldnode);
 }
 
-function replace_special_tags($resource, $doc, $node) {
-  if ($node->nodeType == XML_ELEMENT_NODE) {
-    if ($node->prefix == 'xeemes') {
-      if ($node->localName == 'xsl-transformation') {
-	$new = replace_xsl_transformation($resource, $doc, $node);
-	replace_node($node, $new);
+function replace_special_tags($resource, $nodes,
+			      $already_included_locations = null) {
+  if (!$already_included_locations)
+    $already_included_locations = array($resource->location);
+
+  if (!is_array($nodes))
+    $nodes = array($nodes);
+
+  foreach ($nodes as $node) {
+    if ($node->nodeType == XML_ELEMENT_NODE) {
+      if ($node->namespaceURI == XEEMES_NS_URI) {
+	if ($node->localName == 'xsl-transformation') {
+	  $new = make_xsl_transformation($resource, $node);
+	  replace_node($node, $new);
+	} else if ($node->localName == 'resource') {
+	  $new = include_resource($resource, $node,
+				  $already_included_locations);
+	  replace_node($node, $new);
+	} else {
+	  $err = $node->ownerDocument->createTextNode('Unknown special tag: '.
+						      $node->localName);
+	  print_r($node->parentNode);
+	  $node->parentNode->replaceChild($err, $node);
+	}
       } else {
-	$node->parentNode->replaceChild($doc->createTextNode('Unknown special tag: '.$node->localName), $node);
+	foreach (nodelist2array($node->childNodes) as $child)
+	  replace_special_tags($resource, $child, $already_included_locations);
       }
-    } else {
-      foreach (nodelist2array($node->childNodes) as $child) {
-	replace_special_tags($resource, $doc, $child);
-      }
     }
   }
 }
 
-function replace_xsl_transformation($resource, $doc, $node) {
+function make_xsl_transformation($resource, $node) {
   // TODO: Error checking
   // load stylesheet
+  $doc = $node->ownerDocument;
   $stylesheet_res = get_resource($node->getAttribute('stylesheet'), array(),
 				 $resource->get_location());
   $stylesheet = new XSLTProcessor();



From dfrese at berlios.de  Fri Oct 21 00:22:13 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Fri, 21 Oct 2005 00:22:13 +0200
Subject: [Xeemes-commits] r12 - trunk/src
Message-ID: <200510202222.j9KMMDk5025727@sheep.berlios.de>

Author: dfrese
Date: 2005-10-21 00:22:12 +0200 (Fri, 21 Oct 2005)
New Revision: 12

Modified:
   trunk/src/resources.inc
   trunk/src/utils.inc
   trunk/src/wikipedia.inc
Log:
Subject: Implemented possibility to use PHP in HTML-resources

Also moved some things to utils.inc


Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-17 19:34:35 UTC (rev 11)
+++ trunk/src/resources.inc	2005-10-20 22:22:12 UTC (rev 12)
@@ -34,6 +34,8 @@
 define('XEEMES_RESOURCE_DATA',      16);
 define('XEEMES_RESOURCE_WIKIPEDIA', 32);
 
+$allow_php = true;
+
 function get_resource($location, $args, $relation_location = '') {
   if (substr($location, 0, 1) != '/') {
     $info = pathinfo($relation_location);
@@ -167,6 +169,7 @@
       $layout = new Layout($class, $this->get_meta('layout-name'));
       $doc = $layout->process($doc, array()); // TODO parameters
     }
+    $this->process_instructions($doc);
     $this->convert_special_tags($doc);
     // TODO transformations
     return $doc->saveXML();
@@ -175,12 +178,27 @@
   function convert_special_tags($doc) {
     replace_special_tags($this, $doc->documentElement);
   }
+
+  function process_instructions($doc, $node = false) {
+    global $allow_php;
+    if ($node === false) $node = $doc->documentElement;
+    if ($node->nodeType == XML_PI_NODE) {
+      if (($node->target == 'php') && $allow_php) {
+	$text = eval_php($node->data);
+	$nodes = import_html_text($doc, $text);
+	replace_node($node, $nodes);
+      }
+    } else if ($node->nodeType == XML_ELEMENT_NODE) {
+      foreach (nodelist2array($node->childNodes) as $child)
+	$this->process_instructions($doc, $child);
+    }
+  }
 }
 
 class HTMLResource extends XMLResource {
   /* convert HTML -> DOM document */
   function extensions() {
-    return array('htm', 'html');
+    return array('htm', 'html', 'php');
   }
 
   function type() {
@@ -292,15 +310,6 @@
   return $result;
 }
 
-function replace_node($oldnode, $newnodes) {
-  if (!is_array($newnodes))
-    $newnodes = array($newnodes);
-  foreach ($newnodes as $child) {
-    $oldnode->parentNode->insertBefore($child, $oldnode);
-  }
-  $oldnode->parentNode->removeChild($oldnode);
-}
-
 function replace_special_tags($resource, $nodes,
 			      $already_included_locations = null) {
   if (!$already_included_locations)

Modified: trunk/src/utils.inc
===================================================================
--- trunk/src/utils.inc	2005-10-17 19:34:35 UTC (rev 11)
+++ trunk/src/utils.inc	2005-10-20 22:22:12 UTC (rev 12)
@@ -37,4 +37,62 @@
   define('XEEMES_BASE_DIR', $info2['dirname']);
 }
 
+function strpos_nested($text, $end_str, $start_str, $offset = 0) {
+  do {
+    $end_pos = strpos($text, $end_str, $offset);
+    $start_pos = strpos($text, $start_str, $offset);
+    if ($start_pos === false)
+      return $end_pos;
+    else if ($start_pos < $end_pos) {
+      $rec_pos = strpos_nested($text, $end_str, $start_str,
+			       $start_pos+strlen($start_str));
+      if ($rec_pos === false)
+	return false;
+      else
+	$offset = $rec_pos+strlen($end_str);
+    } else
+      return $end_pos;
+  } while ($offset < strlen($text));
+  return false;
+}
+
+function nodelist2array($nodelist) {
+  $result = array();
+  for ($i = 0; $i < $nodelist->length; $i++)
+    $result []= $nodelist->item($i);
+  return $result;
+}
+
+function replace_node($oldnode, $newnodes) {
+  if (!is_array($newnodes))
+    $newnodes = array($newnodes);
+  foreach ($newnodes as $child) {
+    $oldnode->parentNode->insertBefore($child, $oldnode);
+  }
+  $oldnode->parentNode->removeChild($oldnode);
+}
+
+function eval_php($program) {
+  ob_start();
+  eval($program);
+  $result = ob_get_contents();
+  ob_end_clean();
+  return $result;
+}
+
+function import_html_text($doc, $text) {
+   $xml_text = '<?xml version="1.0" encoding="UTF-8"?>'."\n".
+    '<doc>'.$text.'</doc>';
+  $xml = DOMDocument::loadXML($xml_text);
+  if (!$xml) {
+    return array($doc->createComment('Failed to load text as XML: '), // TODO: Error message?
+		 $doc->createTextNode($text));
+  } else {
+    $result = array();
+    foreach (nodelist2array($xml->documentElement->childNodes) as $ch)
+      $result []= $doc->importNode($ch);
+    return $result;
+  }
+}
+
 ?>

Modified: trunk/src/wikipedia.inc
===================================================================
--- trunk/src/wikipedia.inc	2005-10-17 19:34:35 UTC (rev 11)
+++ trunk/src/wikipedia.inc	2005-10-20 22:22:12 UTC (rev 12)
@@ -25,32 +25,8 @@
 
 define('XEEMES_NS_URI', 'http://xeemes.org/schema');
 
-function strpos_nested($text, $end_str, $start_str, $offset = 0) {
-  do {
-    $end_pos = strpos($text, $end_str, $offset);
-    $start_pos = strpos($text, $start_str, $offset);
-    if ($start_pos === false)
-      return $end_pos;
-    else if ($start_pos < $end_pos) {
-      $rec_pos = strpos_nested($text, $end_str, $start_str,
-			       $start_pos+strlen($start_str));
-      if ($rec_pos === false)
-	return false;
-      else
-	$offset = $rec_pos+strlen($end_str);
-    } else
-      return $end_pos;
-  } while ($offset < strlen($text));
-  return false;
-}
+require_once('utils.inc');
 
-function nodelist2array($nodelist) {
-  $result = array();
-  for ($i = 0; $i < $nodelist->length; $i++)
-    $result []= $nodelist->item($i);
-  return $result;
-}
-
 class WikipediaParser {
   var $document;
 



From dfrese at berlios.de  Fri Oct 21 21:32:20 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Fri, 21 Oct 2005 21:32:20 +0200
Subject: [Xeemes-commits] r13 - trunk/src
Message-ID: <200510211932.j9LJWKvf025013@sheep.berlios.de>

Author: dfrese
Date: 2005-10-21 21:32:20 +0200 (Fri, 21 Oct 2005)
New Revision: 13

Modified:
   trunk/src/resources.inc
   trunk/src/transformation.inc
Log:
Subject: Allow layouts without a class

- Non-class layouts are then not more than simple xsl-transformations
- Also fixed a typo in load_meta


Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-20 22:22:12 UTC (rev 12)
+++ trunk/src/resources.inc	2005-10-21 19:32:20 UTC (rev 13)
@@ -102,9 +102,9 @@
   }
 
   function maybe_load_meta() {
-    if ($meta_data == null)
+    if ($this->meta_data == null)
       if (file_exists($this->meta_filename))
-	$meta_data = load_meta_data($this->meta_filename);
+	$this->meta_data = load_meta_data($this->meta_filename);
       else
 	$this->meta_data = array();
   }
@@ -163,10 +163,16 @@
 
   function xmlContent() {
     $doc = $this->domContent();
-    if ($this->get_meta('layout-name')) {
-      $class = $this->get_meta('layout-class');
-      if (!$class) $class = 'simple';
-      $layout = new Layout($class, $this->get_meta('layout-name'));
+
+    // The XSL-Transformation removes PIs, hence we have to do it here too.
+    $this->process_instructions($doc);
+
+    $layout_name = $this->get_meta('layout-name');
+    if (!$layout_name) $layout_name = 'default';
+    $layout_class = $this->get_meta('layout-class');
+    if ($layout_name) {
+      // class can be false
+      $layout = new Layout($layout_class, $layout_name);
       $doc = $layout->process($doc, array()); // TODO parameters
     }
     $this->process_instructions($doc);

Modified: trunk/src/transformation.inc
===================================================================
--- trunk/src/transformation.inc	2005-10-20 22:22:12 UTC (rev 12)
+++ trunk/src/transformation.inc	2005-10-21 19:32:20 UTC (rev 13)
@@ -47,12 +47,19 @@
 
 class Layout extends Transformation {
   function Layout ($class, $name) {
-    $logic_filename = XEEMES_BASE_DIR.'/layouts/'.$class.'.xsl';
-    $layout_dir = 'layouts/'.$class.'/'.$name;
-    $layout_filename = XEEMES_BASE_DIR.'/'.$layout_dir.'.xml';
-    $this->document = DOMDocument::load($logic_filename);
-    $this->parameters['layout-filename'] = $layout_filename;
-    $this->parameters['layout-url'] = XEEMES_BASE_URL.$layout_dir.'/';
+    if ($class) {
+      $logic_filename = XEEMES_BASE_DIR.'/layouts/'.$class.'.xsl';
+      $layout_dir = 'layouts/'.$class.'/'.$name;
+      $layout_filename = XEEMES_BASE_DIR.'/'.$layout_dir.'.xml';
+      $this->document = DOMDocument::load($logic_filename);
+      $this->parameters['layout-filename'] = $layout_filename;
+      $this->parameters['layout-url'] = XEEMES_BASE_URL.$layout_dir.'/';
+    } else {
+      $layout_dir = 'layouts/'.$name;
+      $layout_filename = XEEMES_BASE_DIR.'/'.$layout_dir.'.xsl';
+      $this->document = DOMDocument::load($layout_filename);
+      $this->parameters['layout-url'] = XEEMES_BASE_URL.$layout_dir.'/';
+    }      
   }
 }
 



From dfrese at berlios.de  Fri Oct 21 21:39:56 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Fri, 21 Oct 2005 21:39:56 +0200
Subject: [Xeemes-commits] r14 - trunk/src
Message-ID: <200510211939.j9LJduu8025553@sheep.berlios.de>

Author: dfrese
Date: 2005-10-21 21:39:56 +0200 (Fri, 21 Oct 2005)
New Revision: 14

Modified:
   trunk/src/resources.inc
   trunk/src/utils.inc
Log:
Subject: Remove . and .. from location paths



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-21 19:32:20 UTC (rev 13)
+++ trunk/src/resources.inc	2005-10-21 19:39:56 UTC (rev 14)
@@ -42,6 +42,7 @@
     if ($info['dirname'] == '/') $info['dirname'] = '';
     $location = $info['dirname'].'/'.$location;
   }
+  $location = canonic_path($location); // TODO: can return false
   $info = pathinfo($location);
   $ext = strtolower($info['extension']);
   if (in_array($ext, ImageResource::extensions()))

Modified: trunk/src/utils.inc
===================================================================
--- trunk/src/utils.inc	2005-10-21 19:32:20 UTC (rev 13)
+++ trunk/src/utils.inc	2005-10-21 19:39:56 UTC (rev 14)
@@ -37,6 +37,44 @@
   define('XEEMES_BASE_DIR', $info2['dirname']);
 }
 
+function canonic_path($relative_path) {
+  // Remove any ./
+  $relative_path = str_replace('/./', '/', $relative_path);
+
+  /*
+  // Remove trailing /
+  if ($relative_path[strlen($relative_path)-1] == '/')
+    $relative_path = substr($relative_path, 0, -1);
+  */
+
+  $realpath = '';
+  $q = 0;
+  $p = strpos($relative_path, '/..', $q);
+  while ($p !== false) {
+    // Get the next part of the path
+    if ($p != $q)
+      $realpath .= substr($relative_path, $q, $p);
+
+    // Find the edge of the previous directory
+    $i = strrpos($realpath, '/');
+    if ($i === false)
+      return false;  // Not enough directories to go up any further.
+
+    // Remove the directory
+    $realpath = substr($realpath, 0, $i);
+    // Take out the "/.."
+    $relative_path = substr($relative_path, 0, $p) .
+      substr($relative_path, $p+3);
+
+    // Find the next "/.."
+    $q = $p;
+    $p = strpos($relative_path, '/..', $q);
+  }
+  // Get the rest of the relative path.
+  $realpath .= substr($relative_path, $q);
+  return $realpath;
+}
+
 function strpos_nested($text, $end_str, $start_str, $offset = 0) {
   do {
     $end_pos = strpos($text, $end_str, $offset);



From dfrese at berlios.de  Fri Oct 21 21:44:37 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Fri, 21 Oct 2005 21:44:37 +0200
Subject: [Xeemes-commits] r15 - trunk/src
Message-ID: <200510211944.j9LJibqv025845@sheep.berlios.de>

Author: dfrese
Date: 2005-10-21 21:44:37 +0200 (Fri, 21 Oct 2005)
New Revision: 15

Modified:
   trunk/src/wikipedia.inc
Log:
Subject: Implemented paragraph generation



Modified: trunk/src/wikipedia.inc
===================================================================
--- trunk/src/wikipedia.inc	2005-10-21 19:39:56 UTC (rev 14)
+++ trunk/src/wikipedia.inc	2005-10-21 19:44:37 UTC (rev 15)
@@ -40,6 +40,7 @@
 
     $this->process_lines();
     $this->process_inliners($this->document->documentElement);
+    $this->process_pbrs();
     $this->post_processing();
 
     // header element inside
@@ -119,13 +120,15 @@
       $hr = $this->document->createElement('hr');
       $line->parentNode->replaceChild($hr, $line);
       return $hr->nextSibling;
-    } else if ($line->textContent == '') {
+    } else if (!$line->hasChildNodes()) {
       $pbr = $this->document->createElement('pbr');
       $line->parentNode->replaceChild($pbr, $line);
       return $pbr->nextSibling;
     } else {
-      foreach (nodelist2array($line->childNodes) as $child)
+      foreach (nodelist2array($line->childNodes) as $child) {
+	$line->removeChild($child);
 	$line->parentNode->insertBefore($child, $line);
+      }
       $next = $line->nextSibling;
       $line->parentNode->removeChild($line);
       return $next;
@@ -240,7 +243,7 @@
   /** */
   function post_processing($node = null) {
     if ($node == null) $node = $this->document->documentElement;
-    // TODO: pbr
+
     if ($node->nodeType == XML_ELEMENT_NODE) {
       //if ($node->namespaceURI == XEEMES_NS_URI) { //?? TODO
       if ($node->prefix == 'xeemes') {
@@ -260,6 +263,45 @@
     }
   }
 
+  function process_pbrs() {
+    $doc = $this->document;
+    $parent = $this->document->documentElement->firstChild;
+
+    $blocklevel_elements = array('ADDRESS', 'BLOCKQUOTE', 'CENTER', 'DIR', 
+				 'DIV', 'DL', 'FIELDSET', 'FORM', 'H1', 'H2', 
+				 'H3', 'H4', 'H5', 'H6', 'HR', 'ISINDEX', 
+				 'MENU', 'NOFRAMES', 'NOSCRIPT', 'OL', 'P', 
+				 'PRE', 'TABLE', 'UL',
+				 // The following elements may also be
+				 // considered block-level elements
+				 // since they may contain block-level
+				 // elements:
+				 'DD', 'DT', 'FRAMESET', 'LI', 'TBODY', 'TD', 
+				 'TFOOT', 'TH', 'THEAD', 'TR');
+    $stack = array();
+    foreach (nodelist2array($parent->childNodes) as $node) {
+      if ($node->nodeType == XML_ELEMENT_NODE) {
+	if ($node->nodeName == 'pbr') {
+	  if (count($stack) > 0) {
+	    $p_element = $doc->createElement('p');
+	    foreach ($stack as $thing) {
+	      $parent->removeChild($thing);
+	      $p_element->appendChild($thing);
+	    }
+	    $parent->replaceChild($p_element, $node);
+	    $stack = array();
+	  } else
+	    $parent->removeChild($node);
+	} else if (in_array(strtoupper($node->nodeName),
+			    $blocklevel_elements)) {
+	  $stack = array();
+	} else
+	  $stack []= $node;
+      } else
+	$stack []= $node;
+    }
+  }
+
   /** input: a xeemes:resource1 node, containing text nodes and other tags
    *  is replaced by a xeemes:resource with appropriate attributes and content
    */



From dfrese at berlios.de  Sat Oct 22 23:13:12 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Sat, 22 Oct 2005 23:13:12 +0200
Subject: [Xeemes-commits] r16 - trunk/src
Message-ID: <200510222113.j9MLDCOk030516@sheep.berlios.de>

Author: dfrese
Date: 2005-10-22 23:13:12 +0200 (Sat, 22 Oct 2005)
New Revision: 16

Modified:
   trunk/src/resources.inc
Log:
Subject: Renamed get_location to getLocation



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-21 19:44:37 UTC (rev 15)
+++ trunk/src/resources.inc	2005-10-22 21:13:12 UTC (rev 16)
@@ -135,7 +135,7 @@
       print($this->stringContent());
   }
 
-  function get_location() {
+  function getLocation() {
     return $this->location;
   }
 
@@ -272,7 +272,7 @@
     return $doc->createTextNode('[Error: recursive inclusion of '.
 				$location.']');
   } else {
-    $location = $resource->get_location();
+    $location = $resource->getLocation();
     array_unshift($already_included_locations, $location);
   }
   $type = $resource->type();
@@ -354,7 +354,7 @@
   // load stylesheet
   $doc = $node->ownerDocument;
   $stylesheet_res = get_resource($node->getAttribute('stylesheet'), array(),
-				 $resource->get_location());
+				 $resource->getLocation());
   $stylesheet = new XSLTProcessor();
   $stylesheet->importStyleSheet($stylesheet_res->domContent());
 



From dfrese at berlios.de  Sat Oct 22 23:27:46 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Sat, 22 Oct 2005 23:27:46 +0200
Subject: [Xeemes-commits] r17 - trunk/src
Message-ID: <200510222127.j9MLRk2B031170@sheep.berlios.de>

Author: dfrese
Date: 2005-10-22 23:27:46 +0200 (Sat, 22 Oct 2005)
New Revision: 17

Modified:
   trunk/src/resources.inc
Log:
Subject: Added isDirectoryIndex and getName



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-22 21:13:12 UTC (rev 16)
+++ trunk/src/resources.inc	2005-10-22 21:27:46 UTC (rev 17)
@@ -139,6 +139,29 @@
     return $this->location;
   }
 
+  function isDirectoryIndex() {
+    global $directory_indices;
+    return in_array(basename($this->location), $directory_indices);
+  }
+
+  function getName() {
+    // TODO: what about title tags in html-files?
+    $name = $this->get_meta('display-name');
+    if ($name)
+      return $name;
+    else {
+      $info = pathinfo($this->location);
+      $name = $info['basename'];
+      if ($this->isDirectoryIndex()) {
+	$parent_location = $info['dirname'];
+	if ($parent_location == '/')
+	  return 'Homepage'; // TODO;
+	else
+	  return basename($parent_location);
+      } else
+	return $name;
+    }
+  }
 }
 
 // TODO: maybe move inline-code into classes
@@ -260,7 +283,6 @@
   $result = array();
 
   $location = $node->attributes->getNamedItem('location')->nodeValue;
-  $name = $location;
   // TODO: args: location, thumbnail, size, frame
   $args = array();
   
@@ -268,6 +290,8 @@
   $inline = $display_n && $display_n->nodeValue;
   $resource = get_resource($location, $args,
 			   $already_included_locations[0]);
+  $name = $resource->getName();
+
   if (in_array($location, $already_included_locations)) {
     return $doc->createTextNode('[Error: recursive inclusion of '.
 				$location.']');



From dfrese at berlios.de  Sat Oct 22 23:30:57 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Sat, 22 Oct 2005 23:30:57 +0200
Subject: [Xeemes-commits] r18 - trunk/src
Message-ID: <200510222130.j9MLUvcU031291@sheep.berlios.de>

Author: dfrese
Date: 2005-10-22 23:30:57 +0200 (Sat, 22 Oct 2005)
New Revision: 18

Modified:
   trunk/src/resources.inc
Log:
Subject: Added rest of directory index stuff



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-22 21:27:46 UTC (rev 17)
+++ trunk/src/resources.inc	2005-10-22 21:30:57 UTC (rev 18)
@@ -35,6 +35,9 @@
 define('XEEMES_RESOURCE_WIKIPEDIA', 32);
 
 $allow_php = true;
+$directory_indices = array('Index', 'index', 'Index.xhtml', 'index.xhtml',
+			   'Index.html', 'index.html', 'Index.php',
+			   'index.php');
 
 function get_resource($location, $args, $relation_location = '') {
   if (substr($location, 0, 1) != '/') {
@@ -43,6 +46,18 @@
     $location = $info['dirname'].'/'.$location;
   }
   $location = canonic_path($location); // TODO: can return false
+
+  if ($location[strlen($location)-1] == '/') {
+    // a request for a directory
+    global $directory_indices;
+    foreach ($directory_indices as $index) {
+      $res = get_resource($location.$index, $args, $relation_location);
+      if ($res->exists())
+	return $res;
+    }
+    // no index file... TODO: create directory listing
+  }
+
   $info = pathinfo($location);
   $ext = strtolower($info['extension']);
   if (in_array($ext, ImageResource::extensions()))
@@ -362,7 +377,6 @@
 	} else {
 	  $err = $node->ownerDocument->createTextNode('Unknown special tag: '.
 						      $node->localName);
-	  print_r($node->parentNode);
 	  $node->parentNode->replaceChild($err, $node);
 	}
       } else {



From dfrese at berlios.de  Sat Oct 22 23:34:49 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Sat, 22 Oct 2005 23:34:49 +0200
Subject: [Xeemes-commits] r19 - trunk
Message-ID: <200510222134.j9MLYnK5031431@sheep.berlios.de>

Author: dfrese
Date: 2005-10-22 23:34:48 +0200 (Sat, 22 Oct 2005)
New Revision: 19

Modified:
   trunk/view.php
Log:
Subject: Set global variable $xeemes_current_resource



Modified: trunk/view.php
===================================================================
--- trunk/view.php	2005-10-22 21:30:57 UTC (rev 18)
+++ trunk/view.php	2005-10-22 21:34:48 UTC (rev 19)
@@ -30,6 +30,8 @@
 
 function view($location, $args) {
   $resource = get_resource($location, $args);
+  global $xeemes_current_resource;
+  $xeemes_current_resource = $resource;
   if (($resource->type() & XEEMES_RESOURCE_XML) > 0) {
     if (!$resource->exists()) {
       print('<html><body>404 - not found</body></html>'); // TODO



From dfrese at berlios.de  Thu Oct 27 16:59:10 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Thu, 27 Oct 2005 16:59:10 +0200
Subject: [Xeemes-commits] r20 - trunk/src
Message-ID: <200510271459.j9RExAZn016378@sheep.berlios.de>

Author: dfrese
Date: 2005-10-27 16:59:09 +0200 (Thu, 27 Oct 2005)
New Revision: 20

Added:
   trunk/src/authenticate.inc
Log:
Subject: Dummy for authorization code



Added: trunk/src/authenticate.inc
===================================================================
--- trunk/src/authenticate.inc	2005-10-22 21:34:48 UTC (rev 19)
+++ trunk/src/authenticate.inc	2005-10-27 14:59:09 UTC (rev 20)
@@ -0,0 +1,30 @@
+<?php
+/*
+ * authenticate.inc - control access to resources and scripts
+ * Copyright (c) 2005 David Frese
+ */
+
+/*
+ * This file is part of Xeemes.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2, or (at your option)
+ * any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; see the file COPYING.  If not, write to
+ * the Free Software Foundation, 59 Temple Place - Suite 330,
+ * Boston, MA 02111-1307, USA.
+ */
+
+function verify_view_authorization($resource) {
+  // TODO
+}
+
+?>



From dfrese at berlios.de  Fri Oct 28 22:51:12 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Fri, 28 Oct 2005 22:51:12 +0200
Subject: [Xeemes-commits] r21 - trunk/src
Message-ID: <200510282051.j9SKpCgg011890@sheep.berlios.de>

Author: dfrese
Date: 2005-10-28 22:51:12 +0200 (Fri, 28 Oct 2005)
New Revision: 21

Modified:
   trunk/src/resources.inc
Log:
Subject: Extended ImageResource with special classes for jpeg, png, gif



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-27 14:59:09 UTC (rev 20)
+++ trunk/src/resources.inc	2005-10-28 20:51:12 UTC (rev 21)
@@ -33,6 +33,9 @@
 define('XEEMES_RESOURCE_HTML',       8);
 define('XEEMES_RESOURCE_DATA',      16);
 define('XEEMES_RESOURCE_WIKIPEDIA', 32);
+define('XEEMES_RESOURCE_JPEG',      128);
+define('XEEMES_RESOURCE_PNG',       256);
+define('XEEMES_RESOURCE_GIF',       512);
 
 $allow_php = true;
 $directory_indices = array('Index', 'index', 'Index.xhtml', 'index.xhtml',
@@ -60,8 +63,12 @@
 
   $info = pathinfo($location);
   $ext = strtolower($info['extension']);
-  if (in_array($ext, ImageResource::extensions()))
-    return new ImageResource($location, $args);
+  if (in_array($ext, JPEGResource::extensions()))
+    return new JPEGResource($location, $args);
+  else if (in_array($ext, PNGResource::extensions()))
+    return new PNGResource($location, $args);
+  else if (in_array($ext, GIFResource::extensions()))
+    return new GIFResource($location, $args);
   else if (in_array($ext, DataResource::extensions()))
     return new DataResource($location, $args);
   else if (in_array($ext, WikipediaResource::extensions()))
@@ -283,15 +290,102 @@
 class ImageResource extends Resource {
   /* display inline with <img> tag */
   /* conversions with GD library */
+
+  function type() {
+    return XEEMES_RESOURCE_IMAGE | parent::type();
+  }
+
+  function outputContent() {
+    header('Content-Type: '.$this->contentType()); // this is abstract
+    // TODO: size args
+    if ($this->args['thumbnail'] == '1') {
+      $image = $this->imageContent(); // abstract
+      $ow = imagesx($image); $oh = imagesy($image);
+      $width = 100;
+      $height = 100;
+
+      if ($ow > $oh)
+	$height = $height * $oh / $ow;
+      else
+	$width = $width * $ow / $oh;
+      $thumb = imagecreatetruecolor($width, $height);
+      imagefilledrectangle($thumb, 0, 0, $width, $height, 16777215);
+      imagecopyresampled($thumb, $image, 0, 0, 0, 0, $width, $height, $ow, $oh);
+
+      $this->outputSameType($thumb); // abstract
+      imagedestroy($thumb);
+      imagedestroy($image);
+    } else
+      parent::outputContent();
+  }
+}
+
+class JPEGResource extends ImageResource {
   function extensions() {
-    return array('jpg', 'jpeg', 'png', 'gif');
+    return array('jpeg', 'jpg');
   }
 
   function type() {
-    return XEEMES_RESOURCE_IMAGE | parent::type();
+    return XEEMES_RESOURCE_JPEG | parent::type();
   }
+
+  function imageContent() {
+    return imagecreatefromjpeg($this->filename);
+  }
+
+  function contentType() {
+    return "image/jpeg";
+  }
+
+  function outputSameType($image) {
+    imagejpeg($image);
+  }
 }
 
+class PNGResource extends ImageResource {
+  function extensions() {
+    return array('png');
+  }
+
+  function type() {
+    return XEEMES_RESOURCE_PNG | parent::type();
+  }
+
+  function imageContent() {
+    return imagecreatefrompng($this->filename);
+  }
+
+  function contentType() {
+    return "image/png";
+  }
+
+  function outputSameType($image) {
+    imagepng($image);
+  }
+}
+
+class GIFResource extends ImageResource {
+  function extensions() {
+    return array('gif');
+  }
+
+  function type() {
+    return XEEMES_RESOURCE_GIF | parent::type();
+  }
+
+  function imageContent() {
+    return imagecreatefromgif($this->filename);
+  }
+
+  function contentType() {
+    return "image/gif";
+  }
+
+  function outputSameType($image) {
+    imagegif($image);
+  }
+}
+
 function include_resource($main_resource, $node,
 			  $already_included_locations) {
   $doc = $node->ownerDocument;



From dfrese at berlios.de  Fri Oct 28 23:01:31 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Fri, 28 Oct 2005 23:01:31 +0200
Subject: [Xeemes-commits] r22 - trunk/src
Message-ID: <200510282101.j9SL1VC2012654@sheep.berlios.de>

Author: dfrese
Date: 2005-10-28 23:01:31 +0200 (Fri, 28 Oct 2005)
New Revision: 22

Modified:
   trunk/src/resources.inc
Log:
Subject: Updated resource class

- Added conversion of location to filesystem charset
- Store args
- Added getParentResource method


Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-28 20:51:12 UTC (rev 21)
+++ trunk/src/resources.inc	2005-10-28 21:01:31 UTC (rev 22)
@@ -41,6 +41,7 @@
 $directory_indices = array('Index', 'index', 'Index.xhtml', 'index.xhtml',
 			   'Index.html', 'index.html', 'Index.php',
 			   'index.php');
+$filesystem_charset = 'iso-8859-1';
 
 function get_resource($location, $args, $relation_location = '') {
   if (substr($location, 0, 1) != '/') {
@@ -85,18 +86,22 @@
   /* location */
   /* meta data */
   /* content */
-  var $location;
+  var $location; // in utf-8 charset
   var $meta_data;
 
   var $filename;
   var $meta_filename;
 
+  var $args;
+
   function Resource ($location, $args) {
     $this->location = $location;
     $this->meta_data = null;
 
-    $this->filename = XEEMES_BASE_DIR.'/data'.$location; // TODO illegal chars
+    $this->filename = XEEMES_BASE_DIR.'/data'.
+      iconv('utf-8', $filesystem_charset, $location); // TODO illegal chars
     $this->meta_filename = $this->filename.'.meta';
+    $this->args = $args;
   }
 
   function type() {
@@ -184,6 +189,10 @@
 	return $name;
     }
   }
+
+  function getParentResource() {
+    return get_resource(dirname($this->location), array());
+  }
 }
 
 // TODO: maybe move inline-code into classes



From dfrese at berlios.de  Fri Oct 28 23:11:10 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Fri, 28 Oct 2005 23:11:10 +0200
Subject: [Xeemes-commits] r23 - trunk/src
Message-ID: <200510282111.j9SLBA2H013078@sheep.berlios.de>

Author: dfrese
Date: 2005-10-28 23:11:09 +0200 (Fri, 28 Oct 2005)
New Revision: 23

Modified:
   trunk/src/resources.inc
Log:
Subject: Added DirectoryResource and fixed get_resource



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-28 21:01:31 UTC (rev 22)
+++ trunk/src/resources.inc	2005-10-28 21:11:09 UTC (rev 23)
@@ -33,6 +33,7 @@
 define('XEEMES_RESOURCE_HTML',       8);
 define('XEEMES_RESOURCE_DATA',      16);
 define('XEEMES_RESOURCE_WIKIPEDIA', 32);
+define('XEEMES_RESOURCE_DIRECTORY', 64);
 define('XEEMES_RESOURCE_JPEG',      128);
 define('XEEMES_RESOURCE_PNG',       256);
 define('XEEMES_RESOURCE_GIF',       512);
@@ -43,23 +44,33 @@
 			   'index.php');
 $filesystem_charset = 'iso-8859-1';
 
+function mypathinfo($path) {
+  $info = pathinfo($path);
+  if ($path[strlen($path)-1] == '/')
+    $info['pathname'] = $path;
+  else
+    $info['pathname'] = $info['dirname'].'/';
+  return $info;
+}
+
 function get_resource($location, $args, $relation_location = '') {
   if (substr($location, 0, 1) != '/') {
-    $info = pathinfo($relation_location);
+    $info = mypathinfo($relation_location);
     if ($info['dirname'] == '/') $info['dirname'] = '';
-    $location = $info['dirname'].'/'.$location;
+    $location = $info['pathname'].$location;
   }
   $location = canonic_path($location); // TODO: can return false
 
+  global $filesystem_charset;
+  $filename = iconv($filesystem_charset, 'utf-8', $location);
+
+  if (($location[strlen($location)-1] != '/') &&
+      (file_exists(XEEMES_BASE_DIR.'/data'.$filename)) &&
+      (is_dir(XEEMES_BASE_DIR.'/data'.$filename)))
+    $location .= '/';
+
   if ($location[strlen($location)-1] == '/') {
-    // a request for a directory
-    global $directory_indices;
-    foreach ($directory_indices as $index) {
-      $res = get_resource($location.$index, $args, $relation_location);
-      if ($res->exists())
-	return $res;
-    }
-    // no index file... TODO: create directory listing
+    return new DirectoryResource($location, $args);
   }
 
   $info = pathinfo($location);
@@ -95,6 +106,7 @@
   var $args;
 
   function Resource ($location, $args) {
+    global $filesystem_charset;
     $this->location = $location;
     $this->meta_data = null;
 
@@ -395,6 +407,67 @@
   }
 }
 
+class DirectoryResource extends XMLResource {
+  // a request for a directory
+  var $index_resource;
+
+  function DirectoryResource ($location, $args) {
+    parent::XMLResource($location, $args);
+    global $directory_indices;
+    $this->index_resource = null;
+    foreach ($directory_indices as $index) {
+      $res = get_resource($location.$index, $args, $relation_location);
+      if ($res->exists()) {
+	$this->index_resource = $res;
+	break;
+      }
+    }
+    // no index file... TODO: create directory listing
+  }
+
+  function type() {
+    return XEEMES_RESOURCE_DIRECTORY | parent::type();
+  }
+
+  function extensions() {
+    return array();
+  }
+
+  function domContent() {
+    if ($this->index_resource)
+      return $this->index_resource->domContent();
+    else
+      return DOMDocument::loadXML('<?xml version="1.0" encoding="iso-8859-1"?>
+<html><body>Automatic directory indexing not implemented</body></html>'); // TODO
+  }
+
+  function getSubresources() {
+    global $directory_indices, $filesystem_charset;
+    // TODO: override by meta-data
+    $path = $this->getLocation();
+    $locations = array();
+    $dir = opendir(XEEMES_BASE_DIR.'/data'.$path);
+    while (($file = readdir($dir)) !== false) {
+      $filename = $path.$file;
+      $pathinfo = pathinfo($filename);
+      if (($file[0] != '.') &&
+	  ($pathinfo['extension'] != 'meta') &&
+	  (!in_array($pathinfo['basename'], $directory_indices)) &&
+	  ($file[strlen($file)-1] != '~')) {
+	// TODO: correct encoding of filesystem???
+	if (is_dir(XEEMES_BASE_DIR.'/data'.$filename))
+	  $filename .= '/';
+	$locations []= iconv($filesystem_charset, 'utf-8', $filename);
+      }
+    }
+    closedir($dir);
+    $result = array();
+    foreach ($locations as $location)
+      $result []= get_resource($location, array());
+    return $result;
+  }
+}
+
 function include_resource($main_resource, $node,
 			  $already_included_locations) {
   $doc = $node->ownerDocument;



From dfrese at berlios.de  Fri Oct 28 23:14:18 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Fri, 28 Oct 2005 23:14:18 +0200
Subject: [Xeemes-commits] r24 - trunk/src
Message-ID: <200510282114.j9SLEI0Q013241@sheep.berlios.de>

Author: dfrese
Date: 2005-10-28 23:14:18 +0200 (Fri, 28 Oct 2005)
New Revision: 24

Modified:
   trunk/src/resources.inc
Log:
Subject: Removed isDirectoryIndex and fixed getName



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-28 21:11:09 UTC (rev 23)
+++ trunk/src/resources.inc	2005-10-28 21:14:18 UTC (rev 24)
@@ -178,27 +178,17 @@
     return $this->location;
   }
 
-  function isDirectoryIndex() {
-    global $directory_indices;
-    return in_array(basename($this->location), $directory_indices);
-  }
-
   function getName() {
     // TODO: what about title tags in html-files?
     $name = $this->get_meta('display-name');
     if ($name)
       return $name;
     else {
-      $info = pathinfo($this->location);
-      $name = $info['basename'];
-      if ($this->isDirectoryIndex()) {
-	$parent_location = $info['dirname'];
-	if ($parent_location == '/')
-	  return 'Homepage'; // TODO;
-	else
-	  return basename($parent_location);
-      } else
+      $name = basename($this->location);
+      if ($name != '')
 	return $name;
+      else
+	return 'Homepage'; // TODO config
     }
   }
 



From dfrese at berlios.de  Fri Oct 28 23:17:11 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Fri, 28 Oct 2005 23:17:11 +0200
Subject: [Xeemes-commits] r25 - trunk/src
Message-ID: <200510282117.j9SLHBPM013495@sheep.berlios.de>

Author: dfrese
Date: 2005-10-28 23:17:11 +0200 (Fri, 28 Oct 2005)
New Revision: 25

Modified:
   trunk/src/resources.inc
Log:
Subject: Added gallery and fixed some resource inclusion code



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-28 21:14:18 UTC (rev 24)
+++ trunk/src/resources.inc	2005-10-28 21:17:11 UTC (rev 25)
@@ -473,7 +473,7 @@
 			   $already_included_locations[0]);
   $name = $resource->getName();
 
-  if (in_array($location, $already_included_locations)) {
+  if ($inline && (in_array($location, $already_included_locations))) {
     return $doc->createTextNode('[Error: recursive inclusion of '.
 				$location.']');
   } else {
@@ -499,8 +499,20 @@
       }
     } else if (($type & XEEMES_RESOURCE_IMAGE) > 0) {
       $img = $doc->createElement('img');
-      // TODO args
-      $img->setAttribute('src', XEEMES_BASE_URL.'view.php'.$location);
+      $img->setAttribute('border', '0'); //?? TODO take over attrs?
+      if ($node->hasAttribute('special')) {
+	$args = array();
+	$special = $node->getAttribute('special');
+	if ($special == 'thumbnail')
+	  $args['thumbnail'] = '1';
+      }
+      // TODO size, frame, etc.
+      $srcurl = XEEMES_BASE_URL.'view.php'.$location;
+      if (count($args) > 0) $srcurl .= '?';
+      foreach ($args as $name => $value)
+	// TODO: really htmlspecialchars??
+	$srcurl .= htmlspecialchars($name).'='.htmlspecialchars($value);
+      $img->setAttribute('src', $srcurl);
       $result = $img;
     } else if (($type & XEEMES_RESOURCE_DATA) > 0) {
       $obj = $doc->createElement('object');
@@ -510,12 +522,17 @@
     }
   } else {
     $link = $doc->createElement('a');
-    if ($node->hasChildNodes()) {
+    if ($node->hasChildNodes()) { // textContent != ''
       foreach (nodelist2array($node->childNodes) as $child)
-	$link->appendChild($link, $doc->importNode($child, true));
+	$link->appendChild($doc->importNode($child, true)); // TODO
     } else
       $link->appendChild($doc->createTextNode($name));
     $link->setAttribute('href', $resource->view_url()); // TODO args
+    // TODO: more sophisticated attribute setting, neg./pos. list etc.
+    if ($node->hasAttribute('class'))
+      $link->setAttribute('class', $node->getAttribute('class'));
+    else
+      $link->setAttribute('class', 'internal');
     $result = $link;
   }
 
@@ -533,18 +550,17 @@
   foreach ($nodes as $node) {
     if ($node->nodeType == XML_ELEMENT_NODE) {
       if ($node->namespaceURI == XEEMES_NS_URI) {
-	if ($node->localName == 'xsl-transformation') {
+	if ($node->localName == 'xsl-transformation')
 	  $new = make_xsl_transformation($resource, $node);
-	  replace_node($node, $new);
-	} else if ($node->localName == 'resource') {
+	else if ($node->localName == 'gallery')
+	  $new = make_gallery($resource, $node);
+	else if ($node->localName == 'resource')
 	  $new = include_resource($resource, $node,
 				  $already_included_locations);
-	  replace_node($node, $new);
-	} else {
-	  $err = $node->ownerDocument->createTextNode('Unknown special tag: '.
+	else
+	  $new = $node->ownerDocument->createTextNode('Unknown special tag: '.
 						      $node->localName);
-	  $node->parentNode->replaceChild($err, $node);
-	}
+	replace_node($node, $new);
       } else {
 	foreach (nodelist2array($node->childNodes) as $child)
 	  replace_special_tags($resource, $child, $already_included_locations);
@@ -585,4 +601,111 @@
   // TODO: recursive replace special tags?
 }
 
+function make_gallery($resource, $node) {
+  $doc = $node->ownerDocument;
+  $result = array();
+
+  /* collect images */
+  // TODO: single resources
+  $slocation = $node->getAttribute('location');
+  $res = get_resource($slocation, array(), $resource->getLocation()); // TODO: fix dirname and '/' problem
+  if (!$res->exists())
+    return $doc->createTextNode('Location not found: '.$res->getLocation());
+  $location = $res->getLocation();
+  
+  $locations = find_gallery_locations($location, true);
+
+  if (isset($resource->args['image'])) {
+    /* view single image */
+    $index = $resource->args['image'];
+    $res = $doc->createElementNS(XEEMES_NS_URI, 'resource');
+    $res->setAttribute('location', $locations[$index]);
+    $res->setAttribute('display', 'inline');
+
+    $things = include_resource($resource, $res, array());
+    $result = $things;
+
+    $nexti = ($index + 1) % count($locations);
+    $previ = (count($locations) + $index - 1) % count($locations);
+    //... TODO navigation
+  } else {
+    /* overview page */
+    $columns = $node->hasAttribute('columns') ?
+      $node->getAttribute('columns') : 6;
+    $per_page = 30;
+    
+    if (isset($resource->args['page']))
+      $page = $resource->args['page'];
+    else
+      $page = 0;
+    
+    $num_pages = count($locations)/$per_page;
+    for ($i = 0; $i < $num_pages; $i++) {
+      $lnk = $doc->createElementNS(XEEMES_NS_URI, 'resource');
+      $lnk->setAttribute('location', $resource->getLocation().'?page='.$i);
+      $lnk->setAttribute('class', 'gallery-link');
+      $lnk->appendChild($doc->createTextNode($i+1));
+      $lnk->appendChild($doc->createTextNode(' '));
+      $result []= include_resource($ressource, $lnk, array());
+    }
+    
+    $table = $doc->createElement('table');
+    $i = $page * $per_page;
+    for ($j = 0; $j < (count($locations) / $columns); $j++) {
+      $row = $table->appendChild($doc->createElement('tr'));
+      for ($k = 0; $k < $columns; $k++) {
+	$cell = $row->appendChild($doc->createElement('td'));
+	
+	$lnk = $doc->createElementNS(XEEMES_NS_URI, 'resource');
+	$lnk->setAttribute('location', $resource->getLocation().'?image='.$i);
+	
+	$res = $doc->createElementNS(XEEMES_NS_URI, 'resource');
+	$res->setAttribute('location', $locations[$i]);
+	$res->setAttribute('display', 'inline');
+	$res->setAttribute('special', 'thumbnail');
+	
+	$things = include_resource($resource, $res, array());
+	if (!is_array($things)) $things = array($things);
+	foreach ($things as $thing)
+	  $lnk->appendChild($thing);
+	
+	$things = include_resource($resource, $lnk, array());
+	if (!is_array($things)) $things = array($things);
+	foreach ($things as $thing)
+	  $cell->appendChild($thing);
+	
+	$i++;
+	if (($i >= count($locations)) || ($i >= (($page + 1)*$per_page)))
+	  break 2;
+      }
+    }
+    $result []= $table;
+  }
+  return $result;
+}
+
+function find_gallery_locations($location, $include_dirs) {
+  global $filesystem_charset;
+  $path = iconv('utf-8', $filesystem_charset, $location);
+  $locations = array();
+  $dir = opendir(XEEMES_BASE_DIR.'/data'.$path);
+  while (($file = readdir($dir)) !== false) {
+    $filename = $path.$file;
+    $pathinfo = pathinfo($filename);
+    if (($file[0] != '.') &&
+	($pathinfo['extension'] != 'meta') &&
+	($file[strlen($file)-1] != '~')) {
+      // TODO: correct encoding of filesystem???
+      if (is_dir(XEEMES_BASE_DIR.'/data'.$filename)) {
+	$filename .= '/';
+	if (!$include_dirs)
+	  continue;
+      }
+      $locations []= iconv($filesystem_charset, 'utf-8', $filename);
+    }
+  }
+  closedir($dir);
+  return $locations;
+}
+
 ?>



From dfrese at berlios.de  Fri Oct 28 23:20:17 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Fri, 28 Oct 2005 23:20:17 +0200
Subject: [Xeemes-commits] r26 - trunk/src
Message-ID: <200510282120.j9SLKHMh013676@sheep.berlios.de>

Author: dfrese
Date: 2005-10-28 23:20:17 +0200 (Fri, 28 Oct 2005)
New Revision: 26

Modified:
   trunk/src/transformation.inc
Log:
Subject: Added functions to be called from an xslt



Modified: trunk/src/transformation.inc
===================================================================
--- trunk/src/transformation.inc	2005-10-28 21:17:11 UTC (rev 25)
+++ trunk/src/transformation.inc	2005-10-28 21:20:17 UTC (rev 26)
@@ -35,6 +35,7 @@
 
   function process($doc, $parameters) {
     $proc = new XSLTProcessor();
+    $proc->registerPHPFunctions();
     $proc->importStyleSheet($this->document);
     foreach ($this->parameters as $name => $value)
       $proc->setParameter('', $name, $value);
@@ -63,33 +64,56 @@
   }
 }
 
-/*
-function make_layout_logic($filename) {
-  // TODO quote filename
-  $xsl = '<?xml version="1.0" encoding="utf-8"?>
-<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
-<xsl:variable name="page" select="/"/>
-<xsl:variable name="layout" select="document(\''.$filename.'\')"/>
-<xsl:template match="/">
-    <xsl:apply-templates select="$layout/html"/>
-</xsl:template>
-<xsl:template match="insert-head">
-    <!-- Get the head values here... -->
-    <xsl:apply-templates select="$page/html/head/*"/>
-</xsl:template>
-<xsl:template match="insert-body">
-    <!-- Get the body here -->
-    <xsl:apply-templates select="$page/html/body/*"/>
-</xsl:template>
-<!-- Identity transformation -->
-<xsl:template match="@*|*">
-    <xsl:copy>
-        <xsl:apply-templates select="@*|node()"/>
-    </xsl:copy>
-</xsl:template>
-</xsl:stylesheet>';
-  return DOMDocument::loadXML($xsl);
+/* utility functions, intended to be called from inside an xsl */
+
+function resource_xml_representation($resource, $doc, $include_subs) {
+  $node = $doc->createElement('resource');
+  $node->setAttribute('location', $resource->getLocation());
+  $node->setAttribute('name', $resource->getName());
+  $is_directory = ($resource->type() & XEEMES_RESOURCE_DIRECTORY) > 0;
+  $node->setAttribute('is-directory', $is_directory ? '1' : '0');
+  if (($include_subs > 0) &&
+      (($resource->type() & XEEMES_RESOURCE_DIRECTORY) > 0)) {
+    $subs = $node->appendChild($doc->createElement('subresources'));
+    foreach ($resource->getSubresources() as $sub)
+      $subs->appendChild(resource_xml_representation($sub, $doc,
+						     $include_subs-1));
+  }
+  return $node;
 }
-*/
 
+function xeemes_current_resource($include_subs = 0) {
+  global $xeemes_current_resource;
+  $doc = new DOMDocument('1.0', 'utf-8');
+  $doc->appendChild(resource_xml_representation($xeemes_current_resource,
+						$doc, $include_subs));
+  return $doc;
+}
+
+function xeemes_parent_resource($include_subs = 0) {
+  global $xeemes_current_resource;
+  $doc = new DOMDocument('1.0', 'utf-8');
+  $parent = $xeemes_current_resource->getParentResource();
+  $doc->appendChild(resource_xml_representation($parent, $doc,
+						$include_subs));
+  return $doc;
+}
+
+function xeemes_current_resource_path($include_subs = 0) {
+  global $xeemes_current_resource;
+  $doc = new DOMDocument('1.0', 'utf-8');
+  $root = $doc->createElement('resource-path');
+  $root->setAttribute('order', 'ascending');
+  $resources = array($xeemes_current_resource);
+  $next = $xeemes_current_resource;
+  while ($next->getLocation() != '/') {
+    $next = $next->getParentResource();
+    array_unshift($resources, $next);
+  }
+  foreach ($resources as $res)
+    $root->appendChild(resource_xml_representation($res, $doc, $include_subs));
+  $doc->appendChild($root);
+  return $doc;
+}
+
 ?>



From dfrese at berlios.de  Fri Oct 28 23:22:09 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Fri, 28 Oct 2005 23:22:09 +0200
Subject: [Xeemes-commits] r27 - in trunk: . src
Message-ID: <200510282122.j9SLM9CK013829@sheep.berlios.de>

Author: dfrese
Date: 2005-10-28 23:22:08 +0200 (Fri, 28 Oct 2005)
New Revision: 27

Modified:
   trunk/src/authenticate.inc
   trunk/view.php
Log:
Subject: Implemented basic authentication support



Modified: trunk/src/authenticate.inc
===================================================================
--- trunk/src/authenticate.inc	2005-10-28 21:20:17 UTC (rev 26)
+++ trunk/src/authenticate.inc	2005-10-28 21:22:08 UTC (rev 27)
@@ -24,7 +24,301 @@
  */
 
 function verify_view_authorization($resource) {
-  // TODO
+  $edir = dirname($resource->getLocation());
+  if ($edir == '/') $edir = '';
+  while (!file_exists(XEEMES_BASE_DIR.'/data'.$edir.'/.htaccess')) {
+    if ($edir == '')
+      return; // no htaccess file found
+    else
+      $edir = dirname($edir);
+  }
+  $htaccess = new htaccess(XEEMES_BASE_DIR.'/data'.$edir.'/.htaccess');
+  $htaccess->load();
+
+  // see if authorization is required
+  $require = $htaccess->getRequire();
+  if ($require == null)
+    return;
+
+  // check passed headers
+  if (isset($_SERVER['PHP_AUTH_USER'])) {
+    $htpasswd = $htaccess->getAuthUserFile();
+    $htpasswd->load();
+    $htgroups = $htaccess->getAuthGroupFile();
+
+    /*$str = base64_decode($_SERVER['HTTP_AUTHORIZATION']);
+    $pos = strpos($str, ':');
+    $user = substr($str, 0, $pos);
+    $pw = substr($str, $pos+1);*/
+    $user = $_SERVER['PHP_AUTH_USER'];
+    $pw = $_SERVER['PHP_AUTH_PW'];
+
+    if (($htpasswd->validUser($user, $pw)) &&
+	( ($require[0] == HTACCESS_REQUIRE_VALID_USER) ||
+	  (($require[0] == HTACCESS_REQUIRE_USER) &&
+	   in_array($user, $require[1])) ||
+	  ((($htgroups->load() || true) &&
+	    ($require[0] == HTACCESS_REQUIRE_GROUP) &&
+	    in_array($user, $htgroups->getGroup($require[1]))) )))
+      // OK
+      return;
+  }
+  
+  // send need for authorization requirement
+  if ($htaccess->getAuthType() == HTACCESS_AUTHTYPE_BASIC) {
+    header('HTTP/1.1 401 Unauthorized');
+    $realm = $htaccess->getAuthName(); // TODO: quote
+    header('WWW-Authenticate: Basic realm="'.$realm.'"');
+    exit();
+  } else {
+    // TODO: internal error: type not supported
+    return;
+  }
 }
 
+function read_lines($fh) {
+  $lines = array();
+  while (!feof($fh)) {
+    $str = trim(fgets($fh));
+    if ($str != '') $lines []= $str;
+  }
+  return $lines;
+}
+
+function write_lines($fh, $lines) {
+  foreach ($lines as $line)
+    fputs($fh, $line."\n");
+}
+
+define('HTACCESS_AUTHTYPE_BASIC', 1);
+
+define('HTACCESS_REQUIRE_VALID_USER', 1);
+define('HTACCESS_REQUIRE_USER', 2);
+define('HTACCESS_REQUIRE_GROUP', 3);
+
+class htaccess {
+  var $filename;
+  var $lines;
+
+  function htaccess ($filename) {
+    $this->filename = $filename;
+  }
+
+  function load() {
+    $fh = fopen($this->filename, 'r');
+    $this->lines = read_lines($fh);
+    fclose($fh);
+  }
+
+  function save() {
+    $fh = fopen($this->filename, 'w'); // TODO chmod if create
+    write_lines($fh, $this->lines);
+    fclose($fh);
+  }
+
+  function getThing($regexp) {
+    foreach ($this->lines as $line) {
+      if (preg_match($regexp, $line, $matches))
+	return $matches;
+    }
+    return null;
+  }
+
+  function setThing($regexp, $value) {
+    for ($i = 0; $i < count($this->lines); $i++) {
+      if (preg_match($regexp, $this->lines[$i])) {
+	$this->lines[$i] = $value;
+	return;
+      }
+    }
+    $this->lines []= $value;
+  }
+
+  function getAuthType() {
+    $matches = $this->getThing('/^authtype\s(.*)/i');
+    if ($matches) {
+      if (strcasecmp($matches[1], 'Basic') == 0)
+	return HTACCESS_AUTHTYPE_BASIC;
+      else
+	return $matches[1];
+    } else
+      return null;
+  }
+
+  function setAuthType($value) {
+    if ($value == HTACCESS_AUTHTYPE_BASIC)
+      $value = 'Basic';
+    $this->setThing('/^authtype\s(.*)/i', 'AuthType '.$value);
+  }
+
+  function getAuthName() {
+    $matches = $this->getThing('/^authname\s(.*)/i');
+    if ($matches)
+      return $matches[1];
+    else
+      return null;
+  }
+
+  function setAuthName($value) {
+    $this->setThing('/^authname\s(.*)/i', 'AuthName '.$value);
+  }
+
+  function getAuthUserFile() {
+    $matches = $this->getThing('/^authuserfile\s(.*)/i');
+    if ($matches) {
+      $file = $matches[1];
+      if ($file[0] != '/')
+	$file = dirname($this->filename).'/'.$file;
+      return new htpasswd($file);
+    } else
+      return null;
+  }
+
+  function setAuthUserFile($value) {
+    // TODO: preserve relative/absolute paths
+    $fname = $value->filename;
+    $this->setThing('/^authuserfile\s(.*)/i', $fname);
+  }
+
+  function getAuthGroupFile() {
+    $matches = $this->getThing('/^authgroupfile\s(.*)/i');
+    if ($matches) {
+      $file = $matches[1];
+      if ($file[0] != '/')
+	$file = dirname($this->filename).'/'.$file;
+      return new htpasswd($file);
+    } else
+      return null;
+  }
+
+  function setAuthGroupFile($value) {
+    $fname = $value->filename;
+    $this->setThing('/^authgroupfile\s(.*)/i', $fname);
+  }
+
+  function getRequire() {
+    $matches = $this->getThing('/^require\s([\S]*)\s?(.*)/i');
+    if ($matches) {
+      $typen = $matches[1];
+      $more = preg_split('/[\s]+/', $matches[2]);
+      if (strcasecmp($typen, 'valid-user') == 0)
+	return array(HTACCESS_REQUIRE_VALID_USER, null);
+      else if (strcasecmp($typen, 'user') == 0)
+	return array(HTACCESS_REQUIRE_USER, $more);
+      else if (strcasecmp($typen, 'group') == 0)
+	return array(HTACCESS_REQUIRE_GROUP, $more);
+      else
+	return array($typen, $matches[2]);
+    } else
+      return null;
+  }
+
+  function setRequire($type, $names = array()) {
+    if ($type == HTACCESS_REQUIRE_VALID_USER)
+      $value = 'require valid-user';
+    else if ($type == HTACCESS_REQUIRE_USER)
+      $value = 'require user '.implode(' ', $names);
+    else if ($type == HTACCESS_REQUIRE_GROUP)
+      $value = 'require group '.implode(' ', $names);
+    else
+      $value = 'require '.$type.' '.$names; // TODO: array?
+    $this->setThing('/^require\s([\S]*)\s?(.*)/i', $value);
+  }
+}
+
+class htpasswd {
+  var $filename;
+  var $lines;
+
+  function htpasswd($filename) {
+    $this->filename = $filename;
+  }
+
+  function load() {
+    $fh = fopen($this->filename, 'r');
+    $this->lines = read_lines($fh);
+    fclose($fh);
+  }
+
+  function save() {
+    $fh = fopen($this->filename, 'w'); // TODO chmod if create
+    write_lines($fh, $this->lines);
+    fclose($fh);
+  }
+
+  function validUser($user, $password) {
+    foreach ($this->lines as $line) {
+      if (preg_match('/^'.preg_quote($user).':(.*)/', $line, $matches))
+	return (crypt($password, substr($matches[1], 0, 2)) == $matches[1]);
+    }
+    return false;
+  }
+
+  function setUser($user, $password) {
+    $str = $user.':'.crypt($password, 'ab'); // TODO: create salt randomly
+    for ($i = 0; $i < count($this->lines); $i++) {
+      $line = $this->lines[$i];
+      if (preg_match('/^'.preg_quote($user).':.*/', $line)) {
+	$this->lines[$i] = $str;
+	return;
+      }
+    }
+    $this->lines []= $str;
+  }
+}
+
+class htgroupfile {
+  var $filename;
+
+  // TODO: is whitespace after ':' needed/checked/inserted?
+
+  function htpasswd($filename) {
+    $this->filename = $filename;
+  }
+
+  function load() {
+    $fh = fopen($this->filename, 'r');
+    $this->lines = read_lines($fh);
+    fclose($fh);
+  }
+
+  function save() {
+    $fh = fopen($this->filename, 'w'); // TODO chmod if create
+    write_lines($fh, $this->lines);
+    fclose($fh);
+  }
+
+  function getGroups() {
+    $result = array();
+    foreach ($this->lines as $line) {
+      if (preg_match('/^([^:]+):.*/', $line, $matches))
+	$result []= $matches[1];
+      // TODO else syntax error/comment
+    }
+    return $result;
+  }
+
+  function getGroup($name) {
+    foreach ($this->lines as $line) {
+      if (preg_match('/^'.preg_quote($name).':(.*)/', $line, $matches)) {
+	$users = preg_split('/[\s]+/', $matches[1]);
+	return $users;
+      }
+    }
+    return null;
+  }
+
+  function setGroup($name, $users) {
+    $str = $name.':'.implode(' ', $users);
+    for ($i = 0; $i < count($this->lines); $i++) {
+      $line = $this->lines[$i];
+      if (preg_match('/^'.preg_quote($name).':.*/', $line)) {
+	$this->lines[$i] = $str;
+	return;
+      }
+    }
+    $this->lines []= $str;
+  }
+}
+
 ?>

Modified: trunk/view.php
===================================================================
--- trunk/view.php	2005-10-28 21:20:17 UTC (rev 26)
+++ trunk/view.php	2005-10-28 21:22:08 UTC (rev 27)
@@ -27,15 +27,21 @@
 define_globals(0);
 
 require_once('src/resources.inc');
+require_once('src/authenticate.inc');
 
 function view($location, $args) {
   $resource = get_resource($location, $args);
+
+  verify_view_authorization($resource);
+
   global $xeemes_current_resource;
   $xeemes_current_resource = $resource;
   if (($resource->type() & XEEMES_RESOURCE_XML) > 0) {
     if (!$resource->exists()) {
+      header('HTTP/1.1 404 Not found');
       print('<html><body>404 - not found</body></html>'); // TODO
     } else {
+      header('Content-Type: text/html; charset=utf-8');
       print($resource->xmlContent());
     }
   } else {
@@ -48,6 +54,6 @@
   }
 }
 
-view($_SERVER['PATH_INFO'], $_SERVER['argv']);
+view($_SERVER['PATH_INFO'], $_GET);
 
 ?>



From dfrese at berlios.de  Sun Oct 30 18:45:12 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Sun, 30 Oct 2005 18:45:12 +0100
Subject: [Xeemes-commits] r28 - trunk/src
Message-ID: <200510301745.j9UHjC5N000089@sheep.berlios.de>

Author: dfrese
Date: 2005-10-30 18:45:10 +0100 (Sun, 30 Oct 2005)
New Revision: 28

Modified:
   trunk/src/resources.inc
Log:
Subject: Fixed extension in mypathinfo of files starting with a dot



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-28 21:22:08 UTC (rev 27)
+++ trunk/src/resources.inc	2005-10-30 17:45:10 UTC (rev 28)
@@ -50,6 +50,13 @@
     $info['pathname'] = $path;
   else
     $info['pathname'] = $info['dirname'].'/';
+
+  if ($info['basename'][0] == '.') {
+    // dot-files
+    $einfo = pathinfo(substr($info['basename'], 1));
+    $info['extension'] = $einfo['extension'];
+  }
+
   return $info;
 }
 
@@ -73,8 +80,9 @@
     return new DirectoryResource($location, $args);
   }
 
-  $info = pathinfo($location);
+  $info = mypathinfo($location);
   $ext = strtolower($info['extension']);
+
   if (in_array($ext, JPEGResource::extensions()))
     return new JPEGResource($location, $args);
   else if (in_array($ext, PNGResource::extensions()))



From dfrese at berlios.de  Sun Oct 30 18:50:33 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Sun, 30 Oct 2005 18:50:33 +0100
Subject: [Xeemes-commits] r29 - in trunk: . src
Message-ID: <200510301750.j9UHoX3Q004933@sheep.berlios.de>

Author: dfrese
Date: 2005-10-30 18:50:31 +0100 (Sun, 30 Oct 2005)
New Revision: 29

Added:
   trunk/src/tags.inc
Modified:
   trunk/src/resources.inc
   trunk/view.php
Log:
Subject: Moved xeemes-tags handling into separate file

- Also slightly changed the logic of the tags (attributes need prefix)
- And moved layout-transformation into view.php


Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-30 17:45:10 UTC (rev 28)
+++ trunk/src/resources.inc	2005-10-30 17:50:31 UTC (rev 29)
@@ -26,6 +26,7 @@
 require_once('transformation.inc');
 require_once('wikipedia.inc');
 require_once('meta.inc');
+require_once('tags.inc');
 
 define('XEEMES_RESOURCE_UNKNOWN',    1);
 define('XEEMES_RESOURCE_XML',        2);
@@ -223,33 +224,20 @@
   }
 
   function domContent() {
-    return DOMDocument::load($this->filename);
+    $doc = DOMDocument::load($this->filename);
+
+    $this->process_instructions($doc);
+    XeemesTag::replaceTags($this, $doc->documentElement);
+    // TODO transformations
+
+    return $doc;
   }
 
   function xmlContent() {
     $doc = $this->domContent();
-
-    // The XSL-Transformation removes PIs, hence we have to do it here too.
-    $this->process_instructions($doc);
-
-    $layout_name = $this->get_meta('layout-name');
-    if (!$layout_name) $layout_name = 'default';
-    $layout_class = $this->get_meta('layout-class');
-    if ($layout_name) {
-      // class can be false
-      $layout = new Layout($layout_class, $layout_name);
-      $doc = $layout->process($doc, array()); // TODO parameters
-    }
-    $this->process_instructions($doc);
-    $this->convert_special_tags($doc);
-    // TODO transformations
     return $doc->saveXML();
   }
 
-  function convert_special_tags($doc) {
-    replace_special_tags($this, $doc->documentElement);
-  }
-
   function process_instructions($doc, $node = false) {
     global $allow_php;
     if ($node === false) $node = $doc->documentElement;
@@ -466,254 +454,4 @@
   }
 }
 
-function include_resource($main_resource, $node,
-			  $already_included_locations) {
-  $doc = $node->ownerDocument;
-  $result = array();
-
-  $location = $node->attributes->getNamedItem('location')->nodeValue;
-  // TODO: args: location, thumbnail, size, frame
-  $args = array();
-  
-  $display_n = $node->attributes->getNamedItem('display');
-  $inline = $display_n && $display_n->nodeValue;
-  $resource = get_resource($location, $args,
-			   $already_included_locations[0]);
-  $name = $resource->getName();
-
-  if ($inline && (in_array($location, $already_included_locations))) {
-    return $doc->createTextNode('[Error: recursive inclusion of '.
-				$location.']');
-  } else {
-    $location = $resource->getLocation();
-    array_unshift($already_included_locations, $location);
-  }
-  $type = $resource->type();
-  if ($inline) {
-    if (($type & XEEMES_RESOURCE_XML) > 0) {
-      if ($resource->exists()) {
-	$incl_doc = $resource->domContent();
-	replace_special_tags($main_resource, $incl_doc->documentElement,
-			     $already_included_locations);
-	$bodies = $incl_doc->getElementsByTagName('body');
-	$body = $bodies->item(0);
-	// TODO: heads?
-	$result = array();
-	foreach (nodelist2array($body->childNodes) as $child)
-	  $result []= $doc->importNode($child, true);
-      } else {
-	$err = $doc->createTextNode('['.$location.' not found]');
-	$result = $err;
-      }
-    } else if (($type & XEEMES_RESOURCE_IMAGE) > 0) {
-      $img = $doc->createElement('img');
-      $img->setAttribute('border', '0'); //?? TODO take over attrs?
-      if ($node->hasAttribute('special')) {
-	$args = array();
-	$special = $node->getAttribute('special');
-	if ($special == 'thumbnail')
-	  $args['thumbnail'] = '1';
-      }
-      // TODO size, frame, etc.
-      $srcurl = XEEMES_BASE_URL.'view.php'.$location;
-      if (count($args) > 0) $srcurl .= '?';
-      foreach ($args as $name => $value)
-	// TODO: really htmlspecialchars??
-	$srcurl .= htmlspecialchars($name).'='.htmlspecialchars($value);
-      $img->setAttribute('src', $srcurl);
-      $result = $img;
-    } else if (($type & XEEMES_RESOURCE_DATA) > 0) {
-      $obj = $doc->createElement('object');
-      $obj->setAttribute('data', XEEMES_BASE_URL.'data/'.$location);
-      // TODO type, args
-      $result = $obj;
-    }
-  } else {
-    $link = $doc->createElement('a');
-    if ($node->hasChildNodes()) { // textContent != ''
-      foreach (nodelist2array($node->childNodes) as $child)
-	$link->appendChild($doc->importNode($child, true)); // TODO
-    } else
-      $link->appendChild($doc->createTextNode($name));
-    $link->setAttribute('href', $resource->view_url()); // TODO args
-    // TODO: more sophisticated attribute setting, neg./pos. list etc.
-    if ($node->hasAttribute('class'))
-      $link->setAttribute('class', $node->getAttribute('class'));
-    else
-      $link->setAttribute('class', 'internal');
-    $result = $link;
-  }
-
-  return $result;
-}
-
-function replace_special_tags($resource, $nodes,
-			      $already_included_locations = null) {
-  if (!$already_included_locations)
-    $already_included_locations = array($resource->location);
-
-  if (!is_array($nodes))
-    $nodes = array($nodes);
-
-  foreach ($nodes as $node) {
-    if ($node->nodeType == XML_ELEMENT_NODE) {
-      if ($node->namespaceURI == XEEMES_NS_URI) {
-	if ($node->localName == 'xsl-transformation')
-	  $new = make_xsl_transformation($resource, $node);
-	else if ($node->localName == 'gallery')
-	  $new = make_gallery($resource, $node);
-	else if ($node->localName == 'resource')
-	  $new = include_resource($resource, $node,
-				  $already_included_locations);
-	else
-	  $new = $node->ownerDocument->createTextNode('Unknown special tag: '.
-						      $node->localName);
-	replace_node($node, $new);
-      } else {
-	foreach (nodelist2array($node->childNodes) as $child)
-	  replace_special_tags($resource, $child, $already_included_locations);
-      }
-    }
-  }
-}
-
-function make_xsl_transformation($resource, $node) {
-  // TODO: Error checking
-  // load stylesheet
-  $doc = $node->ownerDocument;
-  $stylesheet_res = get_resource($node->getAttribute('stylesheet'), array(),
-				 $resource->getLocation());
-  $stylesheet = new XSLTProcessor();
-  $stylesheet->importStyleSheet($stylesheet_res->domContent());
-
-  // find first element node child
-  $docelement = null;
-  foreach (nodelist2array($node->childNodes) as $child) {
-    if ($child->nodeType == XML_ELEMENT_NODE) {
-      $docelement = $child;
-      break;
-    }
-  }
-  $doc2 = new DomDocument();
-  $doc2->appendChild($doc2->importNode($docelement, true));
-
-  $result_doc = $stylesheet->transformToDoc($doc2);
-  
-  $result_nodes = array();
-  foreach (nodelist2array($result_doc->childNodes) as $node) {
-    $result_nodes []= $doc->importNode($node, true);
-  }
-  return $result_nodes;
-  
-  //return $doc->importNode($result_doc->documentElement, true);
-  // TODO: recursive replace special tags?
-}
-
-function make_gallery($resource, $node) {
-  $doc = $node->ownerDocument;
-  $result = array();
-
-  /* collect images */
-  // TODO: single resources
-  $slocation = $node->getAttribute('location');
-  $res = get_resource($slocation, array(), $resource->getLocation()); // TODO: fix dirname and '/' problem
-  if (!$res->exists())
-    return $doc->createTextNode('Location not found: '.$res->getLocation());
-  $location = $res->getLocation();
-  
-  $locations = find_gallery_locations($location, true);
-
-  if (isset($resource->args['image'])) {
-    /* view single image */
-    $index = $resource->args['image'];
-    $res = $doc->createElementNS(XEEMES_NS_URI, 'resource');
-    $res->setAttribute('location', $locations[$index]);
-    $res->setAttribute('display', 'inline');
-
-    $things = include_resource($resource, $res, array());
-    $result = $things;
-
-    $nexti = ($index + 1) % count($locations);
-    $previ = (count($locations) + $index - 1) % count($locations);
-    //... TODO navigation
-  } else {
-    /* overview page */
-    $columns = $node->hasAttribute('columns') ?
-      $node->getAttribute('columns') : 6;
-    $per_page = 30;
-    
-    if (isset($resource->args['page']))
-      $page = $resource->args['page'];
-    else
-      $page = 0;
-    
-    $num_pages = count($locations)/$per_page;
-    for ($i = 0; $i < $num_pages; $i++) {
-      $lnk = $doc->createElementNS(XEEMES_NS_URI, 'resource');
-      $lnk->setAttribute('location', $resource->getLocation().'?page='.$i);
-      $lnk->setAttribute('class', 'gallery-link');
-      $lnk->appendChild($doc->createTextNode($i+1));
-      $lnk->appendChild($doc->createTextNode(' '));
-      $result []= include_resource($ressource, $lnk, array());
-    }
-    
-    $table = $doc->createElement('table');
-    $i = $page * $per_page;
-    for ($j = 0; $j < (count($locations) / $columns); $j++) {
-      $row = $table->appendChild($doc->createElement('tr'));
-      for ($k = 0; $k < $columns; $k++) {
-	$cell = $row->appendChild($doc->createElement('td'));
-	
-	$lnk = $doc->createElementNS(XEEMES_NS_URI, 'resource');
-	$lnk->setAttribute('location', $resource->getLocation().'?image='.$i);
-	
-	$res = $doc->createElementNS(XEEMES_NS_URI, 'resource');
-	$res->setAttribute('location', $locations[$i]);
-	$res->setAttribute('display', 'inline');
-	$res->setAttribute('special', 'thumbnail');
-	
-	$things = include_resource($resource, $res, array());
-	if (!is_array($things)) $things = array($things);
-	foreach ($things as $thing)
-	  $lnk->appendChild($thing);
-	
-	$things = include_resource($resource, $lnk, array());
-	if (!is_array($things)) $things = array($things);
-	foreach ($things as $thing)
-	  $cell->appendChild($thing);
-	
-	$i++;
-	if (($i >= count($locations)) || ($i >= (($page + 1)*$per_page)))
-	  break 2;
-      }
-    }
-    $result []= $table;
-  }
-  return $result;
-}
-
-function find_gallery_locations($location, $include_dirs) {
-  global $filesystem_charset;
-  $path = iconv('utf-8', $filesystem_charset, $location);
-  $locations = array();
-  $dir = opendir(XEEMES_BASE_DIR.'/data'.$path);
-  while (($file = readdir($dir)) !== false) {
-    $filename = $path.$file;
-    $pathinfo = pathinfo($filename);
-    if (($file[0] != '.') &&
-	($pathinfo['extension'] != 'meta') &&
-	($file[strlen($file)-1] != '~')) {
-      // TODO: correct encoding of filesystem???
-      if (is_dir(XEEMES_BASE_DIR.'/data'.$filename)) {
-	$filename .= '/';
-	if (!$include_dirs)
-	  continue;
-      }
-      $locations []= iconv($filesystem_charset, 'utf-8', $filename);
-    }
-  }
-  closedir($dir);
-  return $locations;
-}
-
 ?>

Added: trunk/src/tags.inc
===================================================================
--- trunk/src/tags.inc	2005-10-30 17:45:10 UTC (rev 28)
+++ trunk/src/tags.inc	2005-10-30 17:50:31 UTC (rev 29)
@@ -0,0 +1,364 @@
+<?php
+/*
+ * tags.inc - what to do with the tags in the xeemes namespace
+ * Copyright (c) 2005 David Frese
+ */
+
+/*
+ * This file is part of Xeemes.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2, or (at your option)
+ * any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; see the file COPYING.  If not, write to
+ * the Free Software Foundation, 59 Temple Place - Suite 330,
+ * Boston, MA 02111-1307, USA.
+ */
+
+define('XEEMES_NS_URI', 'http://xeemes.org/schema');
+
+require_once('resources.inc');
+
+function parse_url_arguments($spec) {
+  $defs = explode('&', $spec);
+  $result = array();
+  foreach ($defs as $def) {
+    $pos = strpos($def, '=');
+    if ($pos === false)
+      $result[$def] = $def;
+    else
+      $result[substr($def, 0, $pos)] = substr($def, $pos+1);
+  }
+  return $result;
+}
+
+function unparse_url_arguments($args) {
+  $result = '';
+  $first = true;
+  foreach ($args as $name => $value) {
+    if ($first) {
+      $result .= $name.'='.$value;
+      $first = false;
+    } else
+      $result .= '&'.$name.'='.$value;
+  }
+  return $result;
+}
+
+
+abstract class XeemesTag {
+  /* returns a node, owned by the same document as $node */
+  function fromNode($resource, $node) {
+    $attrs = array();
+    $content = array();
+    $i = 0;
+    while ($attrnode = $node->attributes->item($i)) {
+      if ($attrnode->namespaceURI == XEEMES_NS_URI)
+	$attrs[$attrnode->name] = $attrnode->value;
+      else
+	//$content []= $node->ownerDocument->importNode($attrnode, true);
+	$content []= $attrnode;
+      $i++;
+    }
+    $child = $node->firstChild;
+    while ($child) {
+      $content []= $child;
+      //$content []= $node->ownerDocument->importNode($child, true);
+      $child = $child->nextSibling;
+    }
+    return $this->toNode($resource, $node->ownerDocument, $attrs, $content);
+  }
+
+  /* return a single node */
+  abstract function toNode($resource, $doc, $attrs, $content = array());
+
+  static function error($doc, $message) {
+    $span = $doc->createElement('span');
+    $span->setAttribute('style', 'color: red;');
+    $span->appendChild($doc->createTextNode('[Error: '.$message.']'));
+    return $span;
+  }
+
+  private static $tags = array('resource' => 'XeemesResourceTag',
+			       'xsl-transformation'
+			       => 'XeemesXSLTransformationTag',
+			       'gallery' => 'XeemesGalleryTag');
+
+  static function replaceTags($resource, $node) {
+    if ($node->nodeType == XML_ELEMENT_NODE) {
+      if ($node->namespaceURI == XEEMES_NS_URI) {
+	if (isset(self::$tags[$node->localName])) {
+	  $class = self::$tags[$node->localName];
+	  $obj = new $class();
+	  $new = $obj->fromNode($resource, $node);
+	  $node->parentNode->replaceChild($new, $node);
+	} else {
+	  $err = XeemesTag::error($node->ownerDocument, 'Unknown xeemes tag: '.
+				  $node->localName);
+	  $node->parentNode->replaceNode($err, $node);
+	}
+      } else {
+	$child = $node->firstChild;
+	while ($child) {
+	  self::replaceTags($resource, $child);
+	  $child = $child->nextSibling;
+	}
+	//foreach (nodelist2array($node->childNodes) as $child)
+      }
+    }
+  }
+}
+
+class XeemesResourceTag extends XeemesTag {
+  public function toNode($resource, $doc, $attrs, $content = array()) {
+    if (!isset($attrs['location']))
+      return XeemesTag::error($doc, 'Location undefined in resource tag');
+    $location = $attrs['location'];
+    
+    $inline = (isset($attrs['display']) && ($attrs['display'] == 'inline'))
+      || false;
+    if ($inline)
+      return $this->toNodeInline($resource, $doc, $location, $attrs, $content);
+    else
+      return $this->toNodeLink($resource, $doc, $location, $attrs, $content);
+  }
+
+  private function toNodeInline($resource, $doc, $location, $attrs,
+				$content) {
+    // TODO: prevent recursive inclusions?
+    $args = isset($attrs['arguments']) ?
+      parse_url_arguments($attrs['arguments']) : array();
+    $iresource = get_resource($location, $args, $resource->getLocation());
+    $type = $iresource->type();
+    if (($type & XEEMES_RESOURCE_XML) > 0) {
+      if (!$iresource->exists())
+	return XeemesTag::error($doc, 'Resource "'.$iresource->getLocation().
+				'" not found');
+      else {
+	$idoc = $iresource->domContent();
+	// TODO: extract body if existing
+	$inode = $doc->importNode($idoc->documentElement, true);
+	foreach ($content as $child)
+	  $inode->appendChild($child);
+	return $inode;
+      }
+    } else if (($type & XEEMES_RESOURCE_IMAGE) > 0) {
+      $img = $doc->createElement('img');
+      $url = XEEMES_BASE_URL.'view.php'.$iresource->getLocation();
+      // TODO: size, frame, etc.
+      // TODO: prepend or append args to not override user-defined args?
+      if ($attrs['special'] == 'thumbnail')
+	$args['thumbnail'] = '1';
+
+      if (count($args) > 0)
+	$url .= '?'.unparse_url_arguments($args);
+
+      $img->setAttribute('src', $url);
+      $img->setAttribute('alt', $iresource->getName());
+      return $img;
+    } else if (($type & XEEMES_RESOURCE_IMAGE) > 0) {
+      $obj = $doc->createElement('object');
+      $url = XEEMES_BASE_URL.'data/'.$iresource->getLocation();
+      $obj->setAttribute('data', $url);
+      // TODO type, args
+      return $obj;
+    } else
+      return XeemesTag::error($doc, 'Don\'t know how to inline "'.$location.
+			      '" ('.$type.')');
+  }
+
+  private function toNodeLink($resource, $doc, $location, $attrs,
+			      $content) {
+    $args = isset($attrs['arguments']) ?
+      parse_url_arguments($attrs['arguments']) : array();
+    $iresource = get_resource($location, $args, $resource->getLocation());
+    $ilocation = $iresource->getLocation();
+
+    if (self::onlyAttributes($content))
+      $content []= $doc->createTextNode($iresource->getName());
+    
+    $link = $doc->createElement('a');
+    $href = XEEMES_BASE_URL.'view.php'.$ilocation;
+    if (count($args) > 0)
+      $href .= '?'.unparse_url_arguments($args);
+    $link->setAttribute('href', $href);
+    $link->setAttribute('class', 'xeemes-internal');
+    foreach ($content as $node)
+      $link->appendChild($node);
+    return $link;
+  }
+
+  private static function onlyAttributes($arr) {
+    foreach ($arr as $node) {
+      if ($node->nodeType != XML_ATTRIBUTE_NODE)
+	return false;
+    }
+    return true;
+  }
+}
+
+class XeemesXSLTransformationTag extends XeemesTag {
+  public function toNode($resource, $doc, $attrs, $content = array()) {
+    if (!isset($attrs['stylesheet']))
+      return XeemesTag::error($doc, 'Stylesheet undefined in xsl-transformation tag');
+
+    /* load the stylesheet */
+    $sresource = get_resource($attrs['stylesheet'], array(),
+			      $resource->getLocation());
+    $stylesheet = new XSLTProcessor();
+    $stylesheet->importStyleSheet($sresource->domContent());
+
+    /* only one element allowed in content */
+    $docelement = null;
+    foreach ($content as $node) {
+      if ($node->nodeType == XML_ELEMENT_NODE) {
+	$docelement = $node;
+	break;
+      }
+    }
+    if ($docelement == null)
+      return XeemesTag::error($doc, 'No content specified for xsl-transformation');
+
+    /* content to be transformed */
+    $doc2 = new DomDocument();
+    $doc2->appendChild($doc2->importNode($docelement, true));
+
+    /* transformation */
+    $result_doc = $stylesheet->transformToDoc($doc2);
+    
+    /* import to main doc */
+    return $doc->importNode($result_doc->documentElement, true);
+  }
+}
+
+class XeemesGalleryTag extends XeemesTag {
+  public function toNode($resource, $doc, $attrs, $content = array()) {
+    /* collect image locations */
+    // TODO: error checks
+    // TODO: single resources
+    if (!isset($attrs['location']))
+      return XeemesTag::error($doc, 'Gallery location not defined');
+    $slocation = $attrs['location'];
+
+    $res = get_resource($slocation, array(), $resource->getLocation());
+    if (!$res->exists())
+      return XeemesTag::error('Gallery location not found: '.
+			      $res->getLocation());
+    $location = $res->getLocation();
+  
+    $locations = self::find_locations($location, true);
+
+    if (isset($resource->args['image'])) { // TODO: maybe separate
+					   // resource and request args?
+      /* view single image */
+      $index = $resource->args['image'];
+      $rt = new XeemesResourceTag();
+      $res = $rt->toNode($resource, $doc,
+			 array('location' => $locations[$index],
+			       'display' => 'inline'));
+      // TODO: navigation
+      $nexti = ($index + 1) % count($locations);
+      $previ = (count($locations) + $index - 1) % count($locations);
+
+      return $res;
+    } else {
+      /* overview page */
+      $columns = max(isset($attrs['columns']) ? $attrs['columns'] : 6, 1);
+      $per_page = max(isset($attrs['images-per-page']) ?
+	$attrs['images-per-page'] : 30, 1);
+
+      if (isset($resource->args['page']))
+	$page = $resource->args['page'];
+      else
+	$page = 0;
+
+      $num_pages = count($locations)/$per_page;
+
+      $results = array();
+      /* links to the pages */
+      $rt = new XeemesResourceTag();
+      $links = $doc->createElement('div');
+      $links->setAttribute('class', 'xeemes-gallery-page-links');
+      for ($i = 0; $i < $num_pages; $i++) {
+	$lnk = $rt->toNode($resource, $doc,
+			   array('location' => $resource->getLocation(),
+				 'arguments' => 'page='.$i),
+			   array($doc->createTextNode($i+1)));
+	$links->appendChild($lnk);
+      }
+      $results []= $links;
+      
+      /* thumbnails of images on this page */
+      $thumbnails = array();
+      for ($i = $page * $per_page;
+	   $i < min($per_page, count($locations) - ($page * $per_page));
+	   $i++) {
+	$img = $rt->toNode($resource, $doc,
+			   array('location' => $locations[$i],
+				 'display' => 'inline',
+				 'special' => 'thumbnail'));
+	$lnk = $rt->toNode($resource, $doc,
+			   array('location' => $resource->getLocation(),
+				 'arguments' => 'image='.$i),
+			   array($img));
+	$thumbnails []= $lnk;
+      }
+
+      /* create a table with all thumbnails */
+      $row = 0;
+      $table = $doc->createElement('table');
+      $tr = null;
+      foreach ($thumbnails as $thumb) {
+	if ($row == 0)
+	  $tr = $table->appendChild($doc->createElement('tr'));
+	$td = $tr->appendChild($doc->createElement('td'));
+	$td->appendChild($thumb);
+
+	$row = ($row+1) % ($per_page / $columns);
+      }
+      $results []= $table;
+      
+      /* div with results */
+      $div = $doc->createElement('div');
+      $div->setAttribute('class', 'xeemes-gallery');
+      foreach ($results as $res)
+	$div->appendChild($res);
+      return $div;
+    }
+  }
+
+  private static function find_locations($location, $include_dirs) {
+    global $filesystem_charset;
+    $path = iconv('utf-8', $filesystem_charset, $location);
+    $locations = array();
+    $dir = opendir(XEEMES_BASE_DIR.'/data'.$path);
+    while (($file = readdir($dir)) !== false) {
+      $filename = $path.$file;
+      $pathinfo = pathinfo($filename);
+      if (($file[0] != '.') &&
+	  ($pathinfo['extension'] != 'meta') &&
+	  ($file[0] != '_') &&
+	  ($file[strlen($file)-1] != '~')) {
+	// TODO: correct encoding of filesystem???
+	if (is_dir(XEEMES_BASE_DIR.'/data'.$filename)) {
+	  $filename .= '/';
+	  if (!$include_dirs)
+	    continue;
+	}
+	$locations []= iconv($filesystem_charset, 'utf-8', $filename);
+      }
+    }
+    closedir($dir);
+    return $locations;
+  }
+}
+
+?>

Modified: trunk/view.php
===================================================================
--- trunk/view.php	2005-10-30 17:45:10 UTC (rev 28)
+++ trunk/view.php	2005-10-30 17:50:31 UTC (rev 29)
@@ -28,6 +28,7 @@
 
 require_once('src/resources.inc');
 require_once('src/authenticate.inc');
+require_once('src/transformation.inc');
 
 function view($location, $args) {
   $resource = get_resource($location, $args);
@@ -42,7 +43,20 @@
       print('<html><body>404 - not found</body></html>'); // TODO
     } else {
       header('Content-Type: text/html; charset=utf-8');
-      print($resource->xmlContent());
+      $doc = $resource->domContent();
+
+      $layout_name = $resource->get_meta('layout-name');
+      if (!$layout_name) $layout_name = 'default';
+      $layout_class = $resource->get_meta('layout-class');
+      if ($layout_name) {
+	// class can be false
+	$layout = new Layout($layout_class, $layout_name);
+	$doc = $layout->process($doc, array()); // TODO parameters
+      }
+      //$this->process_instructions($doc); // TODO
+      XeemesTag::replaceTags($resource, $doc->documentElement);
+
+      print($doc->saveXML());
     }
   } else {
     if (!$resource->exists())



From dfrese at berlios.de  Sun Oct 30 18:51:14 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Sun, 30 Oct 2005 18:51:14 +0100
Subject: [Xeemes-commits] r30 - trunk/src
Message-ID: <200510301751.j9UHpEWp005334@sheep.berlios.de>

Author: dfrese
Date: 2005-10-30 18:51:13 +0100 (Sun, 30 Oct 2005)
New Revision: 30

Modified:
   trunk/src/wikipedia.inc
Log:
Subject: Adjusted to new xeemes-tags



Modified: trunk/src/wikipedia.inc
===================================================================
--- trunk/src/wikipedia.inc	2005-10-30 17:50:31 UTC (rev 29)
+++ trunk/src/wikipedia.inc	2005-10-30 17:51:13 UTC (rev 30)
@@ -23,10 +23,11 @@
  * Boston, MA 02111-1307, USA.
  */
 
-define('XEEMES_NS_URI', 'http://xeemes.org/schema');
-
 require_once('utils.inc');
+require_once('tags.inc');
 
+define('WIKI_TEMP_NS', 'http://xeemes.org/wiki-temp-schema');
+
 class WikipediaParser {
   var $document;
 
@@ -76,8 +77,7 @@
 	$s2 = $this->document->createTextNode(substr($first->textContent,
 						     $pos+$dim));
 	$line []= $s1;
-	$xl = $this->document->createElementNS(XEEMES_NS_URI,
-					       'xeemes:line');
+	$xl = $this->document->createElementNS(WIKI_TEMP_NS, 'tmp:line');
 	foreach ($line as $item)
 	  $xl->appendChild($item);
 	$line = array();
@@ -92,8 +92,7 @@
       }
     }
     if (count($line) > 0) {
-      $xl = $this->document->createElementNS(XEEMES_NS_URI,
-					     'xeemes:line');
+      $xl = $this->document->createElementNS(WIKI_TEMP_NS, 'tmp:line');
       foreach ($line as $item)
 	$xl->appendChild($item);
       $this->document->documentElement->firstChild->appendChild($xl);
@@ -187,8 +186,7 @@
       else if (substr($text, $start, 2) == '[[') {
 	$pos = strpos_nested($text, ']]', '[[', $start+2);
 	if ($pos === false) $this->parse_error();
-	$res = $this->document->createElementNS(XEEMES_NS_URI,
-						'xeemes:resource1');
+	$res = $this->document->createElementNS(WIKI_TEMP_NS, 'tmp:resource1');
 	foreach ($this->replace_inliners($text, $start+2, $pos) as $node)
 	  $res->appendChild($node);
 	$start = $pos+2;
@@ -196,8 +194,7 @@
       } else if (substr($text, $start, 1) == '[') {
 	$pos = strpos_nested($text, ']', '[', $start+1);
 	if ($pos === false) $this->parse_error();
-	$link = $this->document->createElementNS(XEEMES_NS_URI,
-						 'xeemes:link1');
+	$link = $this->document->createElementNS(WIKI_TEMP_NS, 'tmp:link1');
 	foreach ($this->replace_inliners($text, $start+1, $pos) as $node)
 	  $link->appendChild($node);
 	$start = $pos+1;
@@ -245,8 +242,7 @@
     if ($node == null) $node = $this->document->documentElement;
 
     if ($node->nodeType == XML_ELEMENT_NODE) {
-      //if ($node->namespaceURI == XEEMES_NS_URI) { //?? TODO
-      if ($node->prefix == 'xeemes') {
+      if ($node->namespaceURI == WIKI_TEMP_NS) {
 	if ($node->localName == 'resource1') {
 	  foreach (nodelist2array($node->childNodes) as $child)
 	    $this->post_processing($child);
@@ -302,7 +298,7 @@
     }
   }
 
-  /** input: a xeemes:resource1 node, containing text nodes and other tags
+  /** input: a resource1 node, containing text nodes and other tags
    *  is replaced by a xeemes:resource with appropriate attributes and content
    */
   function process_resource1($node) {
@@ -316,10 +312,12 @@
 	  if ($first) { // the first text part is the location
 	    $first = false;
 	    if (($text != '') && ($text[0] == ':')) {
-	      $resource->setAttribute('display', 'inline');
+	      $resource->setAttributeNS(XEEMES_NS_URI, 'xeemes:display',
+					'inline');
 	      $text = substr($text, 1);
 	    }
-	    $resource->setAttribute('location', $text);
+	    $resource->setAttributeNS(XEEMES_NS_URI, 'xeemes:location',
+				      $text);
 	  } else if (($text == 'left') ||
 		     ($text == 'right') ||
 		     ($text == 'center')) {
@@ -329,11 +327,14 @@
 	    // ignore ??
 	  } else if (($text == 'thumb') ||
 		     ($text == 'thumbnail')) {
-	    $resource->setAttribute('special', 'thumbnail');
+	    $resource->setAttributeNS(XEEMES_NS_URI, 'xeemes:special',
+				      'thumbnail');
 	  } else if (preg_match('/([0-9]+px)/', $text, $matches)) {
-	    $resource->setAttribute('size', $matches[1]);
+	    $resource->setAttributeNS(XEEMES_NS_URI, 'xeemes:size',
+				      $matches[1]);
 	  } else if ($text == 'frame') {
-	    $resource->setAttribute('special', 'frame');
+	    $resource->setAttributeNS(XEEMES_NS_URI, 'xeemes:special',
+				      'frame');
 	  } else {
 	    // the alternate text
 	    $resource->appendChild($this->document->createTextNode($text));



From dfrese at berlios.de  Sun Oct 30 20:11:46 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Sun, 30 Oct 2005 20:11:46 +0100
Subject: [Xeemes-commits] r31 - trunk/src
Message-ID: <200510301911.j9UJBkj6021022@sheep.berlios.de>

Author: dfrese
Date: 2005-10-30 20:11:44 +0100 (Sun, 30 Oct 2005)
New Revision: 31

Modified:
   trunk/src/tags.inc
Log:
Subject: Fixed bug in XeemesTag::replaceTags



Modified: trunk/src/tags.inc
===================================================================
--- trunk/src/tags.inc	2005-10-30 17:51:13 UTC (rev 30)
+++ trunk/src/tags.inc	2005-10-30 19:11:44 UTC (rev 31)
@@ -108,8 +108,9 @@
       } else {
 	$child = $node->firstChild;
 	while ($child) {
+	  $next = $child->nextSibling;
 	  self::replaceTags($resource, $child);
-	  $child = $child->nextSibling;
+	  $child = $next;
 	}
 	//foreach (nodelist2array($node->childNodes) as $child)
       }



From dfrese at berlios.de  Sun Oct 30 21:28:02 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Sun, 30 Oct 2005 21:28:02 +0100
Subject: [Xeemes-commits] r32 - trunk/src
Message-ID: <200510302028.j9UKS2GG021542@sheep.berlios.de>

Author: dfrese
Date: 2005-10-30 21:28:02 +0100 (Sun, 30 Oct 2005)
New Revision: 32

Modified:
   trunk/src/authenticate.inc
Log:
Subject: Fixed a bug in dir traversing



Modified: trunk/src/authenticate.inc
===================================================================
--- trunk/src/authenticate.inc	2005-10-30 19:11:44 UTC (rev 31)
+++ trunk/src/authenticate.inc	2005-10-30 20:28:02 UTC (rev 32)
@@ -25,8 +25,8 @@
 
 function verify_view_authorization($resource) {
   $edir = dirname($resource->getLocation());
-  if ($edir == '/') $edir = '';
   while (!file_exists(XEEMES_BASE_DIR.'/data'.$edir.'/.htaccess')) {
+    if ($edir == '/') $edir = '';
     if ($edir == '')
       return; // no htaccess file found
     else



From dfrese at berlios.de  Sun Oct 30 21:29:34 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Sun, 30 Oct 2005 21:29:34 +0100
Subject: [Xeemes-commits] r33 - trunk/src
Message-ID: <200510302029.j9UKTYOq021675@sheep.berlios.de>

Author: dfrese
Date: 2005-10-30 21:29:34 +0100 (Sun, 30 Oct 2005)
New Revision: 33

Modified:
   trunk/src/tags.inc
Log:
Subject: Fixed import of xsl-transformation result



Modified: trunk/src/tags.inc
===================================================================
--- trunk/src/tags.inc	2005-10-30 20:28:02 UTC (rev 32)
+++ trunk/src/tags.inc	2005-10-30 20:29:34 UTC (rev 33)
@@ -236,7 +236,13 @@
     $result_doc = $stylesheet->transformToDoc($doc2);
     
     /* import to main doc */
-    return $doc->importNode($result_doc->documentElement, true);
+    if ($result_doc->childNodes->length > 1) {
+      $span = $doc->createElement('span');
+      foreach (nodelist2array($result_doc->childNodes) as $child)
+	$span->appendChild($doc->importNode($child, true));
+      return $span;
+    } else
+      return $doc->importNode($result_doc->firstChild, true);
   }
 }
 



From dfrese at berlios.de  Sun Oct 30 21:32:49 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Sun, 30 Oct 2005 21:32:49 +0100
Subject: [Xeemes-commits] r34 - trunk/src
Message-ID: <200510302032.j9UKWnLE022151@sheep.berlios.de>

Author: dfrese
Date: 2005-10-30 21:32:45 +0100 (Sun, 30 Oct 2005)
New Revision: 34

Modified:
   trunk/src/resources.inc
Log:
Subject: Remove extension from default resource name



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-30 20:29:34 UTC (rev 33)
+++ trunk/src/resources.inc	2005-10-30 20:32:45 UTC (rev 34)
@@ -55,9 +55,19 @@
   if ($info['basename'][0] == '.') {
     // dot-files
     $einfo = pathinfo(substr($info['basename'], 1));
-    $info['extension'] = $einfo['extension'];
+    if (isset($einfo['extension']))
+      $info['extension'] = $einfo['extension'];
+    else
+      unset($info['extension']);
   }
 
+  if (isset($info['extension']))
+    $info['name'] = substr($info['basename'], 0,
+			   strlen($info['basename'])
+			   - strlen($info['extension']) - 1);
+  else
+    $info['name'] = $info['basename'];
+
   return $info;
 }
 
@@ -193,7 +203,8 @@
     if ($name)
       return $name;
     else {
-      $name = basename($this->location);
+      $info = mypathinfo($this->location);
+      $name = $info['name'];
       if ($name != '')
 	return $name;
       else



From dfrese at berlios.de  Sun Oct 30 21:34:23 2005
From: dfrese at berlios.de (David Frese at BerliOS)
Date: Sun, 30 Oct 2005 21:34:23 +0100
Subject: [Xeemes-commits] r35 - trunk/src
Message-ID: <200510302034.j9UKYNqE022341@sheep.berlios.de>

Author: dfrese
Date: 2005-10-30 21:34:22 +0100 (Sun, 30 Oct 2005)
New Revision: 35

Modified:
   trunk/src/resources.inc
   trunk/src/utils.inc
Log:
Subject: Changed way of PI handling



Modified: trunk/src/resources.inc
===================================================================
--- trunk/src/resources.inc	2005-10-30 20:32:45 UTC (rev 34)
+++ trunk/src/resources.inc	2005-10-30 20:34:22 UTC (rev 35)
@@ -237,32 +237,15 @@
   function domContent() {
     $doc = DOMDocument::load($this->filename);
 
-    $this->process_instructions($doc);
+    global $allow_php;
+    if ($allow_php)
+      replace_php_instructions($doc);
+
     XeemesTag::replaceTags($this, $doc->documentElement);
     // TODO transformations
 
     return $doc;
   }
-
-  function xmlContent() {
-    $doc = $this->domContent();
-    return $doc->saveXML();
-  }
-
-  function process_instructions($doc, $node = false) {
-    global $allow_php;
-    if ($node === false) $node = $doc->documentElement;
-    if ($node->nodeType == XML_PI_NODE) {
-      if (($node->target == 'php') && $allow_php) {
-	$text = eval_php($node->data);
-	$nodes = import_html_text($doc, $text);
-	replace_node($node, $nodes);
-      }
-    } else if ($node->nodeType == XML_ELEMENT_NODE) {
-      foreach (nodelist2array($node->childNodes) as $child)
-	$this->process_instructions($doc, $child);
-    }
-  }
 }
 
 class HTMLResource extends XMLResource {

Modified: trunk/src/utils.inc
===================================================================
--- trunk/src/utils.inc	2005-10-30 20:32:45 UTC (rev 34)
+++ trunk/src/utils.inc	2005-10-30 20:34:22 UTC (rev 35)
@@ -110,27 +110,45 @@
   $oldnode->parentNode->removeChild($oldnode);
 }
 
-function eval_php($program) {
+function replace_process_instructions($doc, $defs, $node = false) {
+  if ($node === false) $node = $doc->documentElement;
+  if ($node->nodeType == XML_PI_NODE) {
+    if (array_key_exists($node->target, $defs)) {
+      $fun = $defs[$node->target];
+      $node->parentNode->replaceChild($fun($doc, $node->data), $node);
+    } else {
+      // error, ignore, keep?
+    }
+  } else if ($node->nodeType == XML_ELEMENT_NODE) {
+    foreach (nodelist2array($node->childNodes) as $child)
+      replace_process_instructions($doc, $defs, $child);
+  }
+}
+
+function replace_php_instructions($doc) {
+  replace_process_instructions($doc, array('php' => 'eval_php'));
+}
+
+function eval_php($doc, $program) {
   ob_start();
   eval($program);
-  $result = ob_get_contents();
+  $text = ob_get_contents();
   ob_end_clean();
-  return $result;
+
+  return import_html_text($doc, $text);
 }
 
 function import_html_text($doc, $text) {
-   $xml_text = '<?xml version="1.0" encoding="UTF-8"?>'."\n".
-    '<doc>'.$text.'</doc>';
-  $xml = DOMDocument::loadXML($xml_text);
+  $xml_text = '<?xml version="1.0" encoding="UTF-8"?>'."\n".
+    '<span>'.$text.'</span>';
+  $xml = @DOMDocument::loadXML($xml_text);
   if (!$xml) {
-    return array($doc->createComment('Failed to load text as XML: '), // TODO: Error message?
-		 $doc->createTextNode($text));
-  } else {
-    $result = array();
-    foreach (nodelist2array($xml->documentElement->childNodes) as $ch)
-      $result []= $doc->importNode($ch);
-    return $result;
-  }
+    $span = $doc->createElement('span');
+    $span->appendChild($doc->createComment('Failed to load text as XML: '));
+    $span->appendChild($doc->createTextNode($text));
+    return $span;
+  } else
+    return $doc->importNode($xml->documentElement, true);
 }
 
 ?>



